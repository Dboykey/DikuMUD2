index           = SPL_FIND_WANTED
name            = find wanted
acttype         = A_SOMEONE
tochar          = You beseech Tyr, God of Law, to show you the path to justice...
torest          = $1n calls out to Tyr, the God of Law...
toself          = Your hipocrisy does not go unnoticed by Tyr...
toselfroom      = $1n calls out to Tyr, the God of Law...
realm           = ABIL_DIV
sphere          = SPL_DIVINE
func = find_want@paladin_guild
minpos          = POSITION_RESTING
mana            = 5
turns           = PULSE_SEC
targets         = FIND_UNIT_WORLD + FIND_UNIT_ZONE + TAR_CHAR
mediums         = MEDIA_SPELL + MEDIA_WAND + MEDIA_SCROLL
check           = SPLCST_RESIST
offensive       = FALSE
fumble          = 0
race human      = 0
race elf        = 0
race dwarf      = 0
race halfling   = 0
race gnome      = 0
race half-orc   = 0
race half-ogre  = 0
race half-elf   = 0
race brownie    = 0
race groll      = -1
race darkelf    = 0

index           = SPL_LOCATE_WANTED
name            = locate wanted
acttype         = A_SOMEONE
tochar          = You beckon Tyr to reveal the location of the accused...
torest          = $1n beckons Tyr to aid $1m in $1s quest for justice...
toself          = Your hipocrisy does not go unnoticed by Tyr...
toselfroom      = $1n beckons Tyr to aid $1m in $1s quest for justice...
realm           = ABIL_DIV
sphere          = SPL_DIVINE
func = loc_want@paladin_guild
minpos          = POSITION_STANDING
mana            = 10
turns           = PULSE_SEC
targets         = FIND_UNIT_WORLD + FIND_UNIT_ZONE + TAR_CHAR
mediums         = MEDIA_SPELL + MEDIA_SCROLL
check           = SPLCST_RESIST
offensive       = FALSE
fumble          = 0
race human      = 0
race elf        = 0
race dwarf      = 0
race halfling   = -1
race gnome      = -1
race half-orc   = 0
race half-ogre  = 0
race half-elf   = 0
race brownie    = 0
race groll      = 0
race darkelf    = 0

/* - - - - Yet another definition of a spell - - - - */

index           = SPL_FIND_PATH
name            = find path
acttype         = A_SOMEONE
tochar          = You pray for the gods to show you the way...
torest          = $1n prays for divine guidance...
toself          = You pray for the gods to show you the way...
toselfroom      = $1n prays for divine guidance...
realm           = ABIL_DIV
sphere          = SPL_DIVINE
func            = find_path@basis
minpos          = POSITION_RESTING
mana            = 5
turns           = PULSE_SEC
targets         = FIND_UNIT_WORLD + FIND_UNIT_ZONE + TAR_OBJ + TAR_CHAR
mediums         = MEDIA_SPELL + MEDIA_WAND + MEDIA_SCROLL
check           = SPLCST_RESIST
offensive       = FALSE
fumble          = 0
race human      = 0
race elf        = 0
race dwarf      = 0
race halfling   = 0
race gnome      = 0
race half-orc   = 0
race half-ogre  = 0
race half-elf   = 0
race brownie    = 0
race groll      = -1
race darkelf    = 0




dilbegin loc_want(medi:unitptr, tgt : unitptr, arg : string,
		  hm : integer, effect : string);
external
  unitptr unit_room(u : unitptr);

var
  u : unitptr;

code
{

   if (hm < 0)
   {
      act("You feel confused.", A_ALWAYS, self, null, null, TO_CHAR);

      if (hm < -50)
      {
	 act("You realize that $2n attempted to locate you.",
	     A_ALWAYS, tgt, self, null, TO_CHAR);
      }
      quit;
   }

   u := unit_room@basis(tgt);

   if (isset (tgt.charflags,CHAR_OUTLAW))
     act("$2n at $3t", A_SOMEONE, self, tgt, u.title, TO_CHAR);
   else
     act("$2n doesn't seem to be wanted.", A_ALWAYS, self, tgt, null, TO_CHAR);
   quit;
}
dilend



dilbegin find_want(medi:unitptr, tgt : unitptr, arg : string,
		   hm : integer, effect : string);
external
  string dirstring@function (dr:integer);

var
  dir_string:string;
  i:integer;
code
{
   if (hm < 0)
   {
      act("You feel confused.", A_ALWAYS, self, null, null, TO_CHAR);
      quit;
   }

   if (not isset(tgt.charflags,CHAR_OUTLAW))
   {
      act("$2n doesn't seem to be wanted.",
	  A_ALWAYS, self, tgt, null, TO_CHAR);
      quit;
   }

   i := pathto (self,tgt);
   if (i==DIR_IMPOSSIBLE)
   {
      act ("You get the feeling it is impossible from here.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i==DIR_HERE)
   {
      act ("This is the place.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i == DIR_ENTER)
   {
      act ("You should enter something here.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i == EXIT)
   {
      act ("You should exit this place.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else
   {
      dir_string := dirstring@function (i);
      act ("You should leave $2t.",
	   A_ALWAYS,self,dir_string,null,TO_CHAR);
   }
   quit;
}
dilend

dilbegin find_path(medi:unitptr, tgt : unitptr, arg : string,
		   hm : integer, effect : string);
external
  string dirstring@function (dr:integer);

var
  dir_string:string;
  i : integer;
code
{

   if (hm < 0)
   {
      act("You feel confused.", A_ALWAYS, self, null, null, TO_CHAR);
      quit;
   }

   i := pathto (self,tgt);

   if (i==DIR_IMPOSSIBLE)
   {
      act ("You get the feeling it is impossible from here.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i==DIR_HERE)
   {
      act ("This is the place.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i == DIR_ENTER)
   {
      act ("You should enter something here.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else if (i == EXIT)
   {
      act ("You should exit this place.",
	   A_ALWAYS,self,null,null,TO_CHAR);
   }
   else
   {
      dir_string := dirstring@function (i);
      act ("You should leave $2t.",
	   A_ALWAYS,self,dir_string,null,TO_CHAR);
   }
   quit;
}
dilend



