/*
filename    urland
password    nuny
changedby   isildur
EmailAdd     David Gersh <gersh@lightlink.com>
request     compile
version     12
END HEADER*/


/*pwd:catfood*/
/* password:    nunmuncher           filename:     urland.zon                */
/* curr_author: papi                 curr_version: 52.02a                    */
/* prev_author: isildur              prev_version: 52.01a                    */

/* Version example: 1.24a  ==>  1=major version 23=minor version  a=bugfix   */


/* PAPI: Moved weaver's shop into this zone where it belongs */
/* JAGER: added a clan home link */
/* updated as per new limits */
#include <composed.h>

%zone urland
title "The Village Of Urland"
creators {"Venger", "Isildur"}
notes "This zone is designed for low/mid level players...although it contains
       one or two npc's that could only be defeated by mid levels.  Most
       mobiles here vary from level 27-39. < player level 25-35>
       Authors email: carmstro@comp.uark.edu
       Edited by Badone 6-dec-1994 to suit the new weapon styles.
       Edited by Palio for new 50 level mud.
       Rewritten, Rearranged, Room Additions by Isildur to include horses
       Winter-Spring 95-96"

lifespan 23
reset RESET_ANYHOW

#define ARMOUR_S8 \
   equip slth_sleeves@midgaard position WEAR_ARMS \
   equip slth_jerkin@midgaard position WEAR_BODY \
   equip slth_pants@midgaard position WEAR_LEGS
#define ARMOUR_S30 \
   equip iron_bracers@midgaard position WEAR_ARMS \
   equip iron_plate@midgaard position WEAR_BODY \
   equip iron_leggings@midgaard position WEAR_LEGS \
   equip iron_boots@midgaard position WEAR_FEET \
   equip iron_gloves@midgaard position WEAR_HANDS \
   equip iron_helmet@midgaard position WEAR_HEAD

%rooms
weavers

title "A weavers shop"
descr
"   This shop is filled with various types of clothing, material, and
jars of dye.  There is a small wooden counter, and a large loom standing
against the wall."
extra{"clothing", "material"}
"These are some of the fine wares that the weaver has created."
extra{"jars", "dye"}
"These jars hold many different colored dyes."
extra{"wooden counter", "counter"}
"This is a small wooden counter"
extra{"large loom", "loom"}
"It looks as if the weaver uses this to make cloth."
extra{"wall"}
"Yep, it's a wall."


movement SECT_CITY
south to vil_path3;
ALWAYS_LIGHT
end


				glue_factory

title "The Glue Factory"
names {"glue factory"}
descr
"You have fallen into the pit where horses come to die.  It's a good thing
that there are no horses here now, because large gears and razor sharp
teeth lie beneath your feet.  You begin to shiver in your boots, and hope
that someone will summon you out of here soon."
extra {"pit"}
"Yep, you're screwed."
extra {"gears", "teeth"}
"They look like they'd easily crush your bones and shread your skin."
flags {UNIT_FL_NO_WEATHER}
movement SECT_CITY
north to hall4;
end



				stable1

title "The Stable"
names {"stable"}
descr
"You are standing in the stables which serve Udgaard.
Various items of tack line the walls, while brightly
polished saddles sit on large racks.  You seem to sense
the overpowering stench of something that doesn't exactly
smell like hay.  The building has a sloped roof, and there
are large doorways leading to the north and east."

extra {"stables"}
"These stables house the finest warhorses of Udgaard."
extra {"tack", "saddles"}
"These items look to be owned by the stable."
extra {"racks"}
"These racks hold the saddles."
extra {"roof"}
"This heavy timbered roof look to be constructed of oak
beams."
extra {"door", "doors", "doorways"}
"These doorways look to be large enough to allow the passage
of a massive stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to cypress/hill descr
"Top of hill";
east to tack_shop descr
"The Tack Shop";
north to stall1 descr
"Stalls";
end


		       tack_shop

title "The Tack Shop"
names {"tack shop"}
descr
"It is in this store that you may buy the various items
needed to care for and ride your horse.   A large assortment
of bridles, saddles, and other care items line hooks and
shelves along the walls.  There is a doorway leading to the
main stables to the west."

extra {"bridles", "saddles"}
"These were made by Myrna in Midgaard, and shipped here for
sale."
extra {"care items"}
"Everything to make your horse happy."
extra {"hook"}
"OOHHH, sharp."
extra {"shelves"}
"OOHHH, flat and made of oak."
extra {"door", "doors", "doorway"}
"Looks big enough to fit your stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
west to stable1 descr
"The Stable";
end

		       stall1

title "The stalls"
names {"stalls"}
descr
"You are standing in a room with many doors.  This is the part of
the stables which houses the horses."
extra {"doors"}
"These doors appear to be very sturdy."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to stable1 descr
"The Stable";
end


			stable2

title "The Stable"
names {"stable"}
descr
"You are standing in the stables which serve Midgaard.
Various items of tack line the walls, while brightly
polished saddles sit on large racks.  You seem to sense
the overpowering stench of something that doesn't exactly
smell like hay.  The building has a sloped roof, and there
are large doorways leading to the north, south, and east."

extra {"stables"}
"These stables house the finest warhorses of Midgaard."
extra {"tack", "saddles"}
"These items look to be owned by the stable."
extra {"racks"}
"These racks hold the saddles."
extra {"roof"}
"This heavy timbered roof look to be constructed of oak
beams."
extra {"door", "doors", "doorways"}
"These doorways look to be large enough to allow the passage
of a massive stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to tack_shop2 descr
"The Tack Shop";
east to midgaard/wall_rd10 descr
"Wall Road";
north to stall2 descr
"Stalls";
end


		       tack_shop2

title "The Tack Shop"
names {"tack shop"}
descr
"It is in this store that you may buy the various items
needed to care for and ride your horse.  A large assortment
of bridles, saddles, and other care items line hooks and
shelves along the walls.  There is a doorway leading to the
main stables to the north."

extra {"bridles", "saddles"}
"These were made by Myrna the leather worker."
extra {"care items"}
"Everything to make your horse happy."
extra {"hook"}
"OOHHH, sharp."
extra {"shelves"}
"OOHHH, flat and made of oak."
extra {"door", "doors", "doorway"}
"Looks big enough to fit your stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
north to stable2 descr
"The Stable";
end

		       stall2

title "The stalls"
names {"stalls"}
descr
"You are standing in a room with many doors.  This is the part of
the stables which houses the horses."
extra {"doors"}
"These doors appear to be very sturdy."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to stable2 descr
"The Stable";
end

			stable3

title "The Stable"
names {"stable"}
descr
"
>From the smell in the air, you can tell that you just stepped into the
local stables.  You are standing in the stables which
breed Urlands famous warhorses.
Various items of tack line the walls, while brightly
polished saddles sit on large racks. Large piles of
hay are stacked along the walls all the way up to the
top. You seem to sense the overpowering stench of something
that doesn't exactly smell like hay.  The building has a sloped roof,
and there are large doorways leading to the north and south.
There is a sign on the wall."
extra {"sign"}
"&l
They sign says:

Welcome to the Urland Stables

Horses: $$

To receive a horse, type:
>order horse             Cost: 1 Platinum, 4 Gold, 2 Silver

"
extra {"piles", "hay"}
"The hay looks to be quite tasty, if you are a horse."
extra {"stables"}
"These stables house the finest warhorses of Urland."
extra {"tack", "saddles"}
"These items look to be owned by the stable."
extra {"racks"}
"These racks hold the saddles."
extra {"roof"}
"This heavy timbered roof look to be constructed of oak
beams."
extra {"door", "doors", "doorways"}
"These doorways look to be large enough to allow the passage
of a massive stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to hall1;
north to vil_path9;
end


		       tack_shop3

title "The Tack Shop"
names {"tack shop"}
descr
"It is in this store that you may buy the various items
needed to care for and ride your horse.   A large assortment
of bridles, saddles, and other care items line hooks and
shelves along the walls.  There is a doorway leading to the
village road to the south."

extra {"bridles", "saddles"}
"These were made by Myrna in Midgaard and shipped here for
sale."
extra {"care items"}
"Everything to make your horse happy."
extra {"hook"}
"OOHHH, sharp."
extra {"shelves"}
"OOHHH, flat and made of oak."
extra {"door", "doors", "doorway"}
"Looks big enough to fit your stud."

flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
south to vil_path4;
end

				hall1

title "A long hallway"
names {"stalls"}
descr
"You have entered a long hallway, which has doors on the
eastern and western walls."
extra {"hallway"}
"This is where you might stable your horse."
extra {"doors"}
"Many horses live their lives behind these doors.  They are made of
wood and iron, and appear to be very sturdy"
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
north to stable3 descr
"The Stable";
south to hall2;
east to s2 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
west to s1 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
end

				hall2

title "A long hallway"
names {"stalls"}
descr
"You have entered a long hallway, which has doors on the eastern
and western walls."
extra {"hallway"}
"This is where you might stable your horse."
extra {"doors"}
"Many horses live their lives behind these doors.  They are made
of wood and iron, and appear to be very sturdy"
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
north to hall1;
south to hall3;
east to s4 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
west to s3 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
end

				hall3

title "A long hallway"
names {"stalls"}
descr
"You have entered a long hallway, which has doors on the eastern
and western walls."
extra {"hallway"}
"This is where you might stable your horse.."
extra {"doors"}
"Many horses live their lives behind these doors.  They are made
of wood and iron, and appear to be very sturdy"
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
north to hall2;
south to hall4;
east to s6 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
west to s5 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
end

				hall4

title "A long hallway"
names {"stalls"}
descr
"You have entered a long hallway, which has doors on the eastern
and western walls."
extra {"hallway"}
"This is where you might stable your horse."
extra {"doors"}
"Many horses live their lives behind these doors.  They are made
of wood and iron, and appear to be very sturdy"
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
north to hall3;
east to s8 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
west to s7 open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
		key stall_key
		descr "A very large wooden door." keyword {"door"};
south to glue_factory;
end

				s1

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
east to hall1 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end


				s2

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
west to hall1 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s3

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
east to hall2 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s4

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
west to hall2 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s5

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
east to hall3 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s6

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
west to hall3 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s7

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
east to hall4 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end

				s8

title "A stall"
descr
"You are standing in a horse stall, and oops... look what you just
 stepped in.  It looks as if you need to wipe your boot on the hay
 which covers the floor."
extra {"stall"}
"You might stable a horse here."
extra {"hay"}
"The hay looks soft and dry, though a bit mucky in places."
flags {UNIT_FL_NO_WEATHER}

movement SECT_CITY
west to hall4 open {EX_OPEN_CLOSE, EX_CLOSED} descr
     "A very large wooden door." keyword {"door"};
end


				statue
names {"park"}
title "The middle of Statue Park"
descr
"	You are standing in the center of a small park dedicated to
 Sir Gehron and King Cromwell.  Their solid marble statues seem to
reach to the sky, and are surrounded by beds of multi-colored roses.
Large Benches and stately oaks surround these memorials,
providing a quaint place for reflection.  Small cobblestone
paths lead in all four directions."
extra {"solid marble statues", "marble statues",
"large statues", "statues", "marble", "memorials"}
"These statues are images of Sir Gehron and King Cromwell as
they appeared at the peak of their glories.  A slain dragon
lays on the ground beneath their feet, frozen forever in stone."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done by
those whom you would assume to be dwarven.  The path does glory
to the park, and the men that it is dedicated to."
extra {"benches", "large benches"}
"These stone benches appear to be made by the same craftsmen who
constructed the path."
extra {"trees", "oaks"}
"These trees look as old as the hills."
movement SECT_CITY
north to square2;
south to square6;
east to square4;
west to square8;
ALWAYS_LIGHT
end

				square1
names {"park"}
title "North Western Statue Park"
descr
"	The path from the west connects here with Statue Park,
which commemorates the activities of the great King Cromwell,
and the brave knight Sir Gehron.  The small yet worn path to
the north leads to the main part of Urland, while you can travel
south and east into Statue Park."
extra {"cobblestone path"}
"These stones appear to be well cut and laid, with work done by
those whom you would assume to be dwarven.  The path does glory
to the park, and the men that it is dedicated to."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who fought
 valiantly in the great war of the realm."
extra {"path", "worn path"}
"This small yet well worn path is far from the eastern gate of the
 great Midgaard, yet still sees a fair amount of travel."

movement SECT_CITY
east to square2;
south to square8;
west to vil_path20;
north to vil_path27;
ALWAYS_LIGHT
end

				square2

title "Northern Statue Park"
descr
"	You are in a flower garden with all sorts of wild flowers around you.
As far as you can tell, the garden belongs to no one in particular, but
it is still very well kept.  It appears as though this is a community effort
to keep this humble little village looking nice for visitors such as
yourself. The flowers do glory to Statue Park, and the cobblestone
paths lead south, east, and west here.."
extra {"cobblestone path"}
"These stones appear to be well cut and laid, with work done by those
whom you would assume to be dwarven.  The path does glory to the park,
 and the men that it is dedicated to."
extra {"flower garden", "garden", "wild flowers", "flowers"}
"These flowers, grown by the Urland commoners, are skillfully
planted to appear as if they were a field of flowers."
movement SECT_CITY
west to square1;
east to square3;
south to statue;
ALWAYS_LIGHT
end

				square3

title "North Eastern Statue Park"
descr
"	This part of Statue Park is comprised of a small vegetable
garden with exits to the south and west.  As you look down you
notice that you are trampling down a nice patch of ripe tomatoes
and you get the feeling you may want to leave before you get into
trouble.  Though the cobblestones separate the garden from the path,
you get the feeling that nobody would mind if you munched a carrot or two."
extra {"cobblestone path"}
"These stones appear to be well cut and laid, with work done by those
whom you would assume to be dwarven.  The path does glory to the park,
and the men that it is dedicated to."
extra {"garden", "tomatoes", "ripe tomatoes", "carrot", "patch"}
"The vegetables in this garden were grown with a skilled and loving
hand, and are used in the annual feast to celebrate Sir Gehron and
King Cromwell."
movement SECT_CITY
west to square2;
south to square4;
ALWAYS_LIGHT
end



				square4
names {"park"}
title "Eastern Statue Park"
descr
"	Standing on the eastern side of the path, you can begin to
smell the scent of those things which have made Urland famous.  The
horse statue here is a commemoration of that magnificent beast
called the Urland warhorse.  It is cast in bronze, and stands
roughly ten feet tall.  Begonias and petunias surround the base
of the statue, making it appear that the horse is prancing through
a floral field.  You can follow the cobblestone paths to the north,
south, or west."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done by
those whom you would assume to be dwarven.  The path does glory
to the park, and the men that it is dedicated to."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who
fought valiantly in the great war of the realm."
extra {"horse statue", "statue", "warhorse", "bronze"}
"This statue is trash compared to the magnificence of the
living beasts which are raised in this community, though
it is a nice thought."
extra {"begonias", "petunias", "flowers"}
"These flowers are really nice, and they smell even better than
what the statue may have left behind."

movement SECT_CITY
north to square3;
south to square5;
west to statue;
ALWAYS_LIGHT
end


				square5

title "South Eastern Statue Park"
descr
"	This small grove of apple trees is quite quaint.  Small
pink blossoms cover everything, and the scent of fruit is in the
air.  These trees seem to be well tended, and it has been rumored
that these apples are the best in the land.  Perhaps this is why
the horses grow to be so strong.  The small cobblestone paths lead
from north to west."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done by
those whom you would assume to be dwarven.  The path does glory
to the park, and the men that it is dedicated to."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who fought
valiantly in the great war of the realm."
extra {"trees", "apple trees", "pink blossoms", "blossoms", "grove"}
"These trees produce some of the largest and finest apples in the
whole land.  Too bad you can't eat one of these sweet and delicious
treats, the gardener appears to harvest them as soon as they have grown."
extra {"large statues", "statues"}
"These statues are images of Sir Gehron and King Cromwell as they
appeared at the peak of their glories.  A slain dragon lays on the
ground beneath their feet, frozen forever in stone."
movement SECT_CITY
north to square4;
west to square6;
ALWAYS_LIGHT
end



				square6

title "Southern Statue Park"
descr
"The Gallant Stud, Urlands only inn stands to the south.  Built at
the same time as the Park, its mahogany facade bears two similar
yet smaller statues.  The cobblestone path leads up to the marble
doorstep, and warm, inviting scents waft from the door.
The inn appears to be well kept, with small flowered shrubs
providing a quaint look to the outsides.  You can follow the
cobblestone path east or west around the Park, or north to the
center."
extra {"large statues", "statues"}
"These statues are images of Sir Gehron and King Cromwell as
they appeared at the peak of their glories.  A slain dragon
lays on the ground beneath their feet, frozen forever in stone."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done
by those whom you would assume to be dwarven.  The path does
glory to the park, and the men that it is dedicated to."
extra {"the gallant stud", "gallant stud", "stud", "inn",
"doorstep", "outsides", "door"}
"This fine inn appears like it would be a nice place to stay,
and you think that they must have shipped the mahogany in from
somewhere else."
extra {"mahogany", "facade"}
"The wood appears to be high quality, perhaps you should remove
it and build a treehouse."
extra {"flowered shrubs", "shrubs"}
"These shrubs appear to be well tended."
extra {"cobblestone path", "path"}
"These stone appear to be well cut and laid, with work done by
those whom you would assume to be dwarven.  The path does glory
to the park, and the men that it is dedicated to."
extra {"statue park", "park"}
"This park is dedicated to King Cromwell and Sir Gehron who fought
valiantly in the great war of the realm."
movement SECT_CITY
north to statue;
south to inn;
east to square5;
west to square7;
ALWAYS_LIGHT
end


				square7

title "South Western Statue Park"
descr
"	The Southwestern corner of this park has large trees that
seem to have been left untouched by the dragons wrath.  These oaks
provide shade for those who wish to languish in rest on a hot summers
day.  To the northeast stand two large statues, while to
cobblestone paths lead to the north and east."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done
by those whom you would assume to be dwarven.  The path does
glory to the park, and the men that it is dedicated to."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who
fought valiantly in the great war of the realm."
extra {"trees", "oaks"}
"These trees look as old as the hills."
extra {"large statues", "statues"}
"These statues are images of Sir Gehron and King Cromwell as
they appeared at the peak of their glories.  A slain dragon
lays on the ground beneath their feet, frozen forever in stone."
movement SECT_CITY
north to square8;
east to square6;
ALWAYS_LIGHT
end



				square8
names {"park"}
title "Western Statue Park"
descr
"	From the Western side of this square, you can see two
large statues to the east.  The paths are paved with cobblestones,
and the lush green grass surrounding them in well kept.  Stone
benches stand stately at the edges of the road, and they look like a
comfortable place to sit.  You can follow the paths to the
north western and south western corners of Statue Park, or to
the statues to the east."
extra {"cobblestone path", "path"}
"These stones appear to be well cut and laid, with work done
by those whom you would assume to be dwarven.  The path does
glory to the park, and the men that it is dedicated to."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who
fought valiantly in the great war of the realm."
extra {"green grass", "grass"}
"This grass looks good enough to lay down and go to sleep on."
extra {"benches"}
"These stone benches appear to be made by the same craftsmen
who constructed the path."

movement SECT_CITY
north to square1;
south to square7;
east to statue;
ALWAYS_LIGHT
end


				inn
names {"inn"}
title "The Gallant Stud"
descr
"	This cozy room is paneled in oak, and a warm fire
burns in the hearth.  A painting of King Cromwell hangs above
the mantle, and tall candles stand to either side.  Comfortable
chairs and sofas provide seating, and a large bookcase against
the eastern wall provides reading material.  You can smell
something delicious cooking in the kitchen, and it whets your
appetite.  This inn looks as if it would be a nice place to
say, and you can head south into the reception area.  If not,
you can travel north to Statue Park."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who
fought valiantly in the great war of the realm."
extra {"room", "inn"}
"This inn looks as if it would be a nice place to stay."
extra {"oak"}
"This oak has a fine grain, and the building appears to be
well constructed."
extra {"fire"}
"This large fire snaps and crackles."
extra {"painting"}
"This painting depicts Cromwell dressed in his regal garb."
extra {"mantle"}
"The mantle is also constructed of fine oak, and it is
lovingly polished."
extra {"candles"}
"These candles hardly sputter."
extra {"chairs", "couches"}
"These look good enough to sit in for a long time, better
take your armor off first."
extra {"bookcase"}
"This bookcase is jammed full of reading material."
extra {"reception", "area"}
"The reception area is where you register to stay for a
night or two."
movement SECT_CITY
south to inn2;
north to square6;
ALWAYS_LIGHT
end

				inn2
names {"inn"}
title "Reception"
descr
"	The reception desk is adorned with a small bell,
and appears to be constructed of fine oak.  This rooms is
rather simple, though there are a few chairs, and you can
exit to the north or east."
extra {"bell"}
"This is a simple brass bell used to summon the inn keeper."
extra {"oak"}
"This oak has a fine grain, and the desk appears to be well
constructed."
extra {"chairs", "couches"}
"These look good enough to sit in for a long time, better
take your armor off first."
extra {"reception", "area", "desk"}
"The reception area is where you register to stay for a
night or two."
movement SECT_CITY
east to inn3;
north to inn;
ALWAYS_LIGHT
end

				inn3
names {"inn"}
title "Kitchen"
descr
"	Pots and pans hang from a rack at the ceiling, and
various knives and cleavers line the walls.  One of the ovens
has bread baking in it, while a pot of stew simmers over the
fire.  The warm scent of roasted meats fills the air, and all
of the tables are lined with various types of victuals.  You
can exit the kitchen to the west."
extra {"pots", "pans", "pot"}
"These are used to cook food."
extra {"rack"}
"This rack looks pretty sturdy."
extra {"ovens", "oven"}
"These ovens are used to bake bread and roast meat."
extra {"bread"}
"Oh so thick and crusty."
extra {"stew"}
"The stew looks thick and hearty."
extra {"tables", "victuals"}
"This food is used to serve the inns patrons.  Perhaps you
should stay for awhile."
movement SECT_CITY
west to inn2;
ALWAYS_LIGHT
end

				in_nec
names {"necromancers shop"}
title "The necromancer's shop"
descr
"	You see many scrolls and potions lying about.  In the corner stands an
old bookcase containing several brown pieces of paper.  There is a very pungent
aroma in the air, and something about this place makes your eyes water
heavily. The only noticeable exit is to the east."
extra {"scrolls", "potions"}
"These might be used to cast spells."
extra {"bookcase"}
"The bookcase appears to be falling apart."
extra {"paper", "brown paper"}
"The papers look as if they might have been books at one time."

movement SECT_INSIDE
east to pas2;

SECRET_DOOR_DIFFICULTY(WEST, 100)
west to clan_home_015@clans
keyword {"bookcase"} open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN} descr
"Something funny...";

ALWAYS_LIGHT
end
					in_alch
names {"alchemist shop"}
title "The Alchemist's Playground"
descr
"	As you walk into this strange looking shop, smells of various potions
and brews waft by your nose.  Along the shelves are all sorts of primitive
lab equipment, and a large pot boils over a fire in one corner of the room."
extra {"lab equipment", "equipment"}
"There are some beakers and some of the precursors to the Erlenmeyer Flask."
extra {"shelves"}
"The shelves look like they have withstood one blast too many."
extra {"large pot", "pot"}
"Something foul is brewing here."
extra {"fire"}
"The fire burns and crackles."
movement SECT_INSIDE
north to vil_path5;
ALWAYS_LIGHT
end

					tem_ent
names {"temple entrance"}
title "The temple entrance"
descr
"	This is obviously the entrance to what looked like a temple, but
on closer examination you realize that it is just a very gaudy looking
house.  It is easy to tell that the person who lives here is very eccentric
and probably one of the richest people in the town. To the north you see a door
with a sign on the doorknob.  As you look around you see commoners coming and
going in the street.  You notice some of them snickering as they see you
gauking at this ugly home,..erm, temple..erm, whatever it is."
extra {"sign"}
" The sign says GO AWAY!"
extra {"house", "temple"}
"Yep, pretty tacky."
extra {"doorknob"}
"Bright and shiny as ever."
extra {"door"}
"The door is made of wood."
extra {"street"}
"This small village path looks well traveled."
movement SECT_INSIDE
north to sc_house open {EX_OPEN_CLOSE, EX_CLOSED}
	 keyword {"wooden door","door"};
west to vil_path1;
ALWAYS_LIGHT
end

					sc_house
names {"screeton's house"}
title "Screeton's House"
descr
"	As you walk into this room, your eyes are suddenly filled with books
of every sort imaginable.  Books on forgotten spells and potions, books on
everything that one could possibly think of.  Various robes hang on small hooks
along the wall.  Small critters of all sorts, run about in cages along one
wall of the room.  It seems that there is not one bit of order to this place
and you can't help but wonder how ANYONE could find anything in here."
extra {"books"}
"These are magical tomes, handle with care."
extra {"robes"}
"These robes look as if they have sheaves of paper and bottles
sticking out of all of the pockets."
extra {"small hooks", "hooks"}
"These are made of brass."
extra {"critters"}
"Ohhh, so furry."
extra {"cages"}
"Maybe you should let these poor animals go."
movement SECT_INSIDE
south to tem_ent open {EX_OPEN_CLOSE, EX_CLOSED}
keyword {"wooden door","door"};
ALWAYS_LIGHT
end
				in_ch
names {"the church"}
title "A small church"
descr
"	You have just entered a small church.  As you try to walk quietly
along to avoid drawing attention to yourself you suddenly realize how poor
this town must be.  The old wooden floor of the church makes a loud creak
with every step that you take, and no matter how quiet you try to be, you
find each step echoing like thunder through the small establishment.
You are comforted by the fact, however, that no one seems to be paying you
any mind at all.  You notice there is a large wooden cross hung on the
wall.  There are several pews here."
extra {"floor"}
"Jeeze, this floor sucks, it must be made out of plywood."
extra {"cross"}
"This cross has a number of candles burning around it."
movement SECT_INSIDE
east to vil_path3;
ALWAYS_LIGHT

SECRET_DOOR_DIFFICULTY(DOWN, 100)
down to clan_home_021@clans
keyword {"pew", "pews"} open {EX_OPEN_CLOSE, EX_CLOSED, EX_HIDDEN} descr
"Something funny...";

end

				tav1
names {"tavern"}
title "The entryway"
descr
"	You are standing in the entryway of the Prancing Pony,
Urlands only tavern.  Oak boards line the walls, and a large rack
of cloaks stands on the eastern wall.  On  the western wall is a
showcase filled with miniature statuettes of massive warhorses.
These horses hardly appear to suit the title of the bar, while the
horses themselves are the pride of Urland.  You can exit south to
the village path, or saunter north into the tavern."
extra {"entryway"}
"This is how you get to the tavern."
extra {"oak boards", "oak", "boards"}
"These boards are rougher than some you have seen."
extra {"rack", "cloaks"}
"This is the place that you may hang your vestments, it appears
that many people have."
extra {"showcase", "statuettes", "horses"}
"These horses are well crafted, obviously by the hand of a deft
woodsmith."
extra {"prancing pony", "tavern"}
"This is the only bar in Urland, so you'd better get a drink here
if you plan to do so."

movement SECT_INSIDE
south to vil_path5;
north to tav2;
ALWAYS_LIGHT
end


				tav2
names {"tavern"}
title "The Prancing Pony"
descr
"	You are standing in a quaint tavern which serves Urland.
The Prancing Pony was built before the war, and it has withstood
the ravages of time.  The finished oak paneling appears to have
a glossy veneer when seen in the light of the many lamps.  Feisty
and Buxom, the barmaids look as if they aren't interested in taking
any crap.  They would sooner rip your arms off then serve you a beer.
Nonetheless, the commoners seem amicable to your patronage, and you
begin to feel thirsty.  You can exit south to the Taverns entryway."
extra {"entryway"}
"This is how you get to the tavern."
extra {"oak boards", "oak", "boards"}
"These boards are shiny and finished."
extra {"rack", "cloaks"}
"This is the place that you may hang your vestments, it appears that
many people have."
extra {"lamps"}
"These lamps provide light for the bar."
extra {"barmaids"}
"UMMMM..... Beer."
extra {"prancing pony", "tavern"}
"This is the only bar in Urland, so you'd better get a drink here if
you plan to do so."

movement SECT_INSIDE
south to tav1;
ALWAYS_LIGHT
end

				pas1
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses which
munch it.  They meander about the pasture, and they appear to be
retired.  The beasts look quite content to stand around and watch
the dealings of the two leggeds.  Though they are old, their demeanor
leads you to believe that they are smarter than they appear.  You can
exit the pasture to the north, or travel south and east in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
north to vil_path25;
south to pas2;
east to pas3;
ALWAYS_LIGHT
end


				pas2
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses which munch
it.  They meander about the pasture, and they appear to be retired.
The beasts look quite content to stand around and watch the dealings
of the two leggeds.  Though they are old, their demeanor leads you
to believe that they are smarter than they appear.  You can exit
the pasture to the south, enter a small building to the west, or
travel north and east in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
south to vil_path33;
north to pas1;
east to pas4;
west to in_nec;
ALWAYS_LIGHT
end

				pas3
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses which
munch it.  They meander about the pasture, and they appear to be
retired.  The beasts look quite content to stand around and watch
the dealings of the two leggeds.  Though they are old, their
demeanor leads you to believe that they are smarter than they
appear.  You can travel south, east and west in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
south to pas4;
west to pas1;
east to pas6;
ALWAYS_LIGHT
end

				pas4
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses
which munch it.  They meander about the pasture, and they appear
to be retired.  The beasts look quite content to stand around
and watch the dealings of the two leggeds.  Though they are old,
their demeanor leads you to believe that they are smarter than
they appear.  You can travel north, east and west in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
north to pas3;
west to pas2;
east to pas5;
ALWAYS_LIGHT
end

				pas5
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses which
munch it.  They meander about the pasture, and they appear to be
retired.  The beasts look quite content to stand around and watch
the dealings of the two leggeds.  Though they are old, their
demeanor leads you to believe that they are smarter than they
appear.  You can travel north and west in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
north to pas6;
west to pas4;
ALWAYS_LIGHT
end
				pas6
names {"pasture"}
title "Pasture"
descr
"	The lush green grass is cropped short by the horses
which munch it.  They meander about the pasture, and they appear
to be retired.  The beasts look quite content to stand around and
watch the dealings of the two leggeds.  Though they are old, their
demeanor leads you to believe that they are smarter than they appear.
You can travel south and west in the pasture."
extra {"grass", "green grass", "lush green grass"}
"This grass looks good enough to eat."
extra {"horses"}
"These horses are retired."
extra {"building"}
"This is a small wooden building."
extra {"pasture"}
"This pasture was built for older horses to live out their last years."

movement SECT_INSIDE
south to pas5;
west to pas3;
ALWAYS_LIGHT
end

					in_bl
names {"The village blacksmith"}
title "The village blacksmith"
descr
"	As you enter this room, the heat from the hot iron hits you in the
face.  You see a blazing furnace in the middle of the room.  The floor is
covered with dust and pieces of scrap metal.  Various hammers and other
metal working tools hang on handmade nails driven into the wall.  There
is a sign on the wall."
extra {"sign"}
"&l
The sign says:

To get your horse shoed, say:

>shoe horse please"
movement SECT_INSIDE
north to vil_path8;
ALWAYS_LIGHT
end

				vil_path1
names {"village path"}
title "A small village path"
descr
"	You are on a small path in the town of Urland.  You can go north
or south around the village.  Everything looks so peaceful here, these
people lead simple farming lives, and you notice the people looking at
you with a great deal of awe, perhaps, respect.  East leads to a small
temple entrance."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
extra {"temple"}
"It appears to be a very nice house."

movement SECT_CITY
north to vil_path2;
south to vil_path7;
east to tem_ent;
ALWAYS_LIGHT
end

vil_path2
names {"village path"}
title "A small village path"
descr
"	You are on a small village path leading north and south.  You can hear
all of the sounds of the village echo all around.  Life seems to be very
enjoyable here, even though the people are very poor. You can't keep
yourself from envying these people, though at the same time you feel very
sorry for them."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
movement SECT_CITY
north to vil_path3;
south to vil_path1;
ALWAYS_LIGHT
end

				vil_path3

names {"village path"}
title "A small village path"
descr
"	You are at the northwest corner of the village.  There is a small
church to the west, while the path continues east and south.  There is a
tailor shop to the north."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
extra {"church"}
"The church appears to be constructed of wood."
movement SECT_CITY
west to in_ch;
east to vil_path4;
south to vil_path2;
north to weavers;
ALWAYS_LIGHT
end

				vil_path4
names {"village path"}
title "A small village path"
descr
"	You are on a small village path running east and west through the
town.  As you walk, children scamper about and friendly commoners call to
you from their humble abodes, bidding you to have a good day.  You can
go north into Amberomnias tack shop."
movement SECT_CITY
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
extra {"shop", "tack shop"}
"You can buy goods to outfit your horse here."
west to vil_path3;
east to vil_path5;
north to tack_shop3;
ALWAYS_LIGHT
end
				vil_path5
names {"village path"}
title "A small village path"
descr
"	The path continues east and west.  To the south you see a small
building with a bright red sign in the window.  The northern part of
this road is taken up by The Prancing Pony tavern."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large
horsecart."
extra {"tavern", "prancing pony"}
"This tavern looks as if it was well constructed, though the name
doesn't seem to suit Urlands horses."
movement SECT_CITY
west to vil_path4;
east to vil_path25;
south to in_alch;
north to tav1;
extra {"sign"}
"	The bright red sign reads:
						DO NOT ENTER
						DANGEROUS EXPERIMENTS TAKING
						PLACE!!."
ALWAYS_LIGHT
end

					vil_path25
names {"village path"}
title "The end of the path"
descr
"	You have come to the end of the village path.  A less
used trail leads east from here, or you can walk south through
the horse pasture."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a
large horsecart."
extra {"trail"}
"This trail appears to be used quite frequently, though the
commoners from Urland tend to stay closer to the doors of their town."
extra {"horse pasture", "pasture"}
"Hmmm..... Better watch your footing."
movement SECT_CITY
south to pas1;
west to vil_path5;
east to vil_path23;
ALWAYS_LIGHT
end
				vil_path7
names {"village path"}
title "A small village path"
descr
"	You have entered the main part of Urland, and as you look to the south,
you can see farmland and horse pastures stretching into the
horizon.  If you strain your eyes very hard to the west, you
can see the normal black haze that covers the
river town of Ratswarf. To the west is the path that will take
you there, and the towns village path runs from north to east
here.  There is a sign standing among a well tended garden of
rosemary, thyme, and sage."
extra {"urland"}
"Urland is a small farming community which gains most of its
income thorough the sale of its prized warhorses.  The town
itself suffered greatly during the great war, but has sprung
back splendidly."
extra {"farmland", "horse pastures", "pastures"}
"These plots of land and others are the main source of sustenance
for the town of Urland."
extra {"black haze", "haze"}
"This haze hangs in the air like a noxious flatulent excretion."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a
large horsecart."
extra {"sage", "rosemary", "thyme"}
"These herbs seem to remind you of a song you once heard."
extra {"sign"}
"&l
 _____________________________________________________________________
|                                                                     |
|                                                                     |
|                                                                     |
|                               WELCOME TO URLAND                     |
|                                                                     |
|                               PLEASE VISIT OUR WORLD                |
|                               FAMOUS STABLES AND SEE                |
|                               THE MAGNIFICENT HORSES                |
|                                                                     |
|                               PERHAPS STOP IN FOR A DRAFT           |
|                               AT ONE OF OUR LOCAL PUBS              |
|                                                                     |
|                               WE HERE IN URLAND HOPE THAT           |
|                               YOU ARE HAVING A FINE DAY             |
|____________________________________________________________________ |
					|               |
					|               |
					|               |
					|               |
					|               |
					|               |
					|               |
					|               |
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||"

movement SECT_CITY
north to vil_path1;
east to vil_path8;
west to vil_path29;
ALWAYS_LIGHT
end

vil_path8
names {"village path"}
title "A small village path"
descr
"	You are on a small path leading east and west.  To the south you see
the shop of the village blacksmith. The smell of forged metal fills the air
and you can feel the intense heat and smoke of the forge.  Sounds of metal
ringing fill the air."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
extra {"shop", "blacksmith"}
"Perhaps this would be the best place to get your horse shoed."
movement SECT_CITY
west to vil_path7;
east to vil_path9;
south to in_bl;
ALWAYS_LIGHT
end

vil_path9
names {"village path"}
title "A small village path"
descr
"	You are on a small village path leading east and west.  To the south
you see a small building with a picture of a horse in the window.
These must be the famed stables of Urland, and you think that you
should stop in and see the magnificent horses.  You can see that
the building extends far to the south, and many small fenced
areas surround it.  You can see horses romping and playing in
the tall green grass which fills each field."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a large horsecart."
extra {"building", "stables"}
"This building is quite large, and the rather familiar reek of
horse crap exudes from the doorway."
extra {"fenced areas", "areas", "fields", "tall grass",
"green grass", "tall green grass", "grass", "horses"}
"These pastures, and the grass which grows within provides vital
sustenance in the growth process of these magnificent warhorses."

movement SECT_CITY
west to vil_path8;
east to vil_path33;
south to stable3;
ALWAYS_LIGHT
end

				vil_path33
names {"village path"}
title "A small village path"
descr
"	You have come to the end of the village path.  To the
north you see a small pasture with some horses standing and eating
grass.  The village path leads back west, while a small trail
leads to the east."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a
large horsecart."
extra {"pasture", "grass", "horses"}
"These horses look quite happy munching grass and not doing
much else other than going to the bathroom and looking at you funny."
extra {"trail"}
"This trail does not look as if it gets much travel, and you
get the feeling that danger may lie ahead."
movement SECT_CITY
north to pas2;
west to vil_path9;
east to vil_path31;
ALWAYS_LIGHT
end



				vil_path20
names {"village path"}
title "A village path"
descr
"	You can make out a small village to the east.  There are large trees
on both sides of the road and there are exits to the east and west."
movement SECT_CITY
west to vil_path21;
east to square1;
end
				vil_path21
names {"village path"}
title "A small path"
descr
"	You are on a small path running east and west.  Large trees block any
hope of passage to the north and south."
extra {"path"}
"This path leads east to Urland and west to Ratswharf."
movement SECT_CITY
east to vil_path20;
west to vil_path22;
end

				vil_path22
names {"village path"}
title "The end of Kings Road"
descr
"	This is where Ratswharf maintenance on Kings Road ends.  It is easy
to tell because the road goes from very nice, to very rough, and becomes
more of a well traveled dirt path.  From here you can not smell the foul
stench that is usually associated with the town of Ratswharf that is some
ways to the west in the distance.  This is the open countryside, occasionally
as you pass a person here, you notice that they do not cower away or lower
their eyes in suspicion as the Ratswharf people do.  From here you can travel
west on Kings Road toward Ratswarf or travel east along the path toward the
small town of Urland. Large trees block any hope of travel to the north
and south."
extra {"road", "path", "dirt path"}
"The road degenerates into a cart path."
extra {"large trees", "trees"}
"These are really big."
movement SECT_CITY
west to ratswarf/kingroad5;
east to vil_path21;
end


				vil_path23

names {"trail"}
title "A small trail"
descr
"	You are meandering your way along a well worn trail,
and the shrubs have been beaten back considerably.  The trail
is in good condition, and you notice the occasional print of
a horses hoof.  The trees form a canopy above your head as you
travel east or west.  The village path of Urland begins to the
west of you."
extra {"village path", "path"}
"This well kept village path appears to be wide enough for a
large horsecart."
extra {"trail"}
"This trail appears to be traveled considerably."
extra {"shrubs"}
"These are small bushes."
extra {"print"}
"It's kinda semi circle, but it looks like someone stepped in it."
extra {"trees"}
"The trees spread their branches ominously above your head."
movement SECT_CITY
east to vil_path24;
west to vil_path25;
end

				vil_path24
names {"trail"}
title "A small trail"
descr
"	As you travel east or west along this trail, you begin
to feel a chill in your boots.  It is almost as if you are getting
closer to the mountains.  The trees seem to press in tighter, and
dark hills rise in the distance."
extra {"trail"}
"This trail appears to be traveled considerably."
extra {"trees"}
"The trees seem somber, dark, and oppressive."
movement SECT_CITY
east to vil_path6;
west to vil_path23;
ALWAYS_LIGHT
end

				vil_path6
names {"trail"}
title "An intersection"
descr
"	You have come to the end of this small trail.  Another
path seems to lead north into the mountains, and what appears
to be the remains of an old road lie to the east."
extra {"trail"}
"This trail appears to be traveled considerably."
extra {"mountains"}
"The mountains loom in the distance."
extra {"old road", "road"}
"You get the feeling that danger lies ahead."
movement SECT_CITY
west to vil_path24;
north to mount/sm_tr1;
east to darkelf/road1;
ALWAYS_LIGHT
end


				vil_path27
names {"village path"}
title "A small village path"
descr
"	You are on a small path which leads from north to south.
To the north and east lies Urland proper, while the Statue Park
is to the south."
extra {"statue park", "park", "square"}
"This park is dedicated to King Cromwell and Sir Gehron who
fought valiantly in the great war of the realm."
extra {"path", "worn path"}
"This small yet well worn path is far from the eastern gate
of the great Midgaard, yet still sees a fair amount of travel."

movement SECT_CITY
north to vil_path28;
south to square1;
ALWAYS_LIGHT
end

				vil_path28
names {"village path"}
title "A small village path"
descr
"	The small path bends from south to east here.  Tall
trees block passage to the north and west."
extra {"path", "worn path"}
"This small yet well worn path is far from the eastern gate
of the great Midgaard, yet still sees a fair amount of travel."
extra {"tall trees", "trees"}
"These trees are quite massive, and appear to block all hopes
of passage elsewhere than this path... damn"
movement SECT_CITY
east to vil_path29;
south to vil_path27;
ALWAYS_LIGHT
end

				vil_path29
names {"village path"}
title "A small village path"
descr
"	The small worn path travels east and west here.  The
main parts of Urland lie to the east, while the Statue Park
and the trail to Midgaard lie around the bend to the west."
extra {"path", "worn path"}
"This small yet well worn path is far from the eastern gate
of the great Midgaard, yet still sees a fair amount of travel."
movement SECT_CITY
east to vil_path7;
west to vil_path28;
ALWAYS_LIGHT
end

				vil_path31
names {"trail"}
title "A trail"
descr
"	This trail has degenerated from the village path,
and the trees seem to press in from both sides.  You can
assume that this trail is less traveled, and leads to another
small community.  This trail leads to the south or west."
extra {"trail"}
"This small trail leads east from Urland."
extra {"trees"}
"The trees seem to add darkness as they push inwards."
movement SECT_CITY
south to vil_path32;
west to vil_path33;
ALWAYS_LIGHT
end

				vil_path32
names {"trail"}
title "A trail"
descr
"	This trail meanders among the trees, and they seem to
press in from both sides.  You can assume that this trail is
less traveled, and leads to another small community.  This
trail leads to the north to the east."
extra {"trail"}
"This small trail leads east from Urland."
extra {"trees"}
"The trees seem to add darkness as they push inwards."
movement SECT_CITY
north to vil_path31;
east to vil_path10;
ALWAYS_LIGHT
end


				vil_path10
names {"trail"}
title "A trail"
descr
"	This trail meanders among the trees, and they seem
to press in tightly.  You can assume that this trail is less
traveled, and leads to another small community..  This trail
leads to the east and west."
extra {"trail"}
"This small trail leads east from Urland."
extra {"trees"}
"The trees seem to add darkness as they push inwards."
movement SECT_CITY
west to vil_path32;
east to path_in1@gnome;
ALWAYS_LIGHT
end

%mobiles
				girl

names {"stable girl"}
title "Joanne"
descr "The stable girl stands here with a smile."
extra {}
"She stands ready to put your horse into a stall."
M_HUMAN_WARRIOR_SWORD(180,SEX_FEMALE)
romflags {CHAR_PROTECTED}
dilbegin stable69();
var
  pc : unitptr;
  bud  : unitptr;
  girl : unitptr;
  have : string;
  stuff : unitptr;
  item  : unitptr;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command("stable") and ("horse" in
      argument)) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
  {
     have := "$"+activator.name;
     bud := findunit(self, "horse", FIND_UNIT_SURRO, null);
     if (not(have in bud.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     if(bud == null)
     {
       exec("say You haven't got a horse here.", self);
       goto start;
     }
     stuff := findunit(self, "lead", FIND_UNIT_EQUIP, bud.inside);
     if (stuff != null)
     {
	exec("say You can't stable a horse that's being lead.", self);
	goto start;
     }
     bud := findunit(self, "horse", FIND_UNIT_SURRO, null);
     if("$mounted" in bud.extra)
     {
	exec("say You can't stable a horse you are riding", self);
	goto start;
     }
     stuff := findunit(self, "bridle", FIND_UNIT_EQUIP, bud.inside);
     if (stuff != null)
     {
	exec("say You can't stable a horse that's wearing a bridle.", self);
	goto start;
     }
     stuff := findunit(self, "saddle", FIND_UNIT_EQUIP, bud.inside);
     if (stuff != null)
     {
	exec("say You can't stable a horse that's wearing a saddle.", self);
	goto start;
     }
     stuff := findunit(self, "bags", FIND_UNIT_EQUIP, bud.inside);
     if (stuff != null)
     {
	exec("say You can't stable a horse that's wearing saddle bags.", self);
	goto start;
     }
     block;
     addextra(bud.extra, {"$stabled"}, pc.name);
     bud.minv := 243;
     setweight(bud, 0);
     link(bud, pc);

     act("The stable girl puts your horse in a stall.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("The stable girl puts $1ns horse in a stall.",
     A_SOMEONE, pc, null, null, TO_REST);

     item := load("ticket@urland");
     link(item, pc);

     act("The stable girl gives you a claim ticket.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("The stable girl gives a claim ticket to $1n.",
     A_SOMEONE, pc, null, null, TO_REST);

     unsecure(pc);
     goto start;
  }
     :lostpc:
	goto start;
}
dilend

dilbegin stable99();
var
  pc : unitptr;
  bud  : unitptr;
  girl : unitptr;
  have : string;
  item : unitptr;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command("unstable") and ("horse" in
      argument)) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
    {
     bud := findunit(self, "horse", 0, pc.inside);
     have := "$"+pc.name;
     if (not(have in bud.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     block;
     bud := findunit(self, "horse", 0, pc.inside);
     if(bud == null)
     {
	exec("say Sorry, you have no horse here.", self);
	goto start;
     }
     link(bud, pc.outside);
     subextra(bud.extra, "$stabled");
     bud.minv := 0;
     setweight(bud, 3000);
     item := findunit(self, "ticket", 0, pc.inside);
     if(item != null)
     {
        link(item, self);
        destroy(item);
        act("The stable girl takes your claim ticket.",
        A_SOMEONE, pc, null, null, TO_CHAR);

        act("The stable girl takes a claim ticket from $1n.",
        A_SOMEONE, pc, null, null, TO_REST);
     }
     act("The stable girl gets your horse from a stall.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("The stable girl gets $1ns horse from a stall.",
     A_SOMEONE, pc, null, null, TO_REST);
     unsecure(pc);

    }
	goto start;

     :lostpc:
	goto start;
}
dilend
end


				       tackman

names {"Carnath"}
title "the tack seller"
descr "The tack seller appears to have bad gas."
extra {}
"The tack seller shows off his fine wears in hopes
that you will purchase them for your horse."
M_HUMAN_WARRIOR_SWORD(32,SEX_MALE)
romflags {CHAR_PROTECTED}

special SFUN_SHOP_INIT
"Profit sell = 150
Profit buy = 1
Production = ~bridle@urland~ ~saddle1@urland~ ~saddle2@urland~
~saddle3@urland~ ~saddle4@urland~ ~saddle_bags@urland~
~lead@urland~ ~cheat_sheet@urland~
Msg1 = ~$1n says, 'I've got no such item!'~
Msg2 = ~$1n says, '$3n, you haven't even got it!'~
Msg3 = ~$1n says, 'I don't trade with things such as $2n'~
Msg4 = ~$1n says, 'I can't afford it, sorry!'~
Msg5 = ~$1n says, '$3n, you can't afford $2n'~
Msg6 = ~$1n says, 'That's %s for $2n'~
Msg7 = ~$1n says, 'Thank you $3n, here are %s for $2n.'~
Hours1 = 4 12
Hours2 = 13 23"
end

				horse

/*Big Jim Studd*/
names {"horse"}
title "a horse"
descr "A horse is standing here."
capacity 2000
flags {UNIT_FL_TRANS, UNIT_FL_NO_TELEPORT}
M_HORSE_HEAVY(SEX_MALE)
weight 3000
exp -500
level 30

dilbegin masterhorse();
var
pc : unitptr;
mine : string;
bri  : unitptr;
worn : unitptr;
own  : string;
ept  : extraptr;
sad  : unitptr;
bag  : unitptr;
lead  : unitptr;
w1 : unitptr;
w2 : unitptr;
bud  : unitptr;
claim : string;
owner : stringlist;
jerk : string;
rider1 : string;
rider2 : string;
ride1 : unitptr;
ride2 : unitptr;
myname : string;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  if("$trained" in self.extra)
  {
    goto begin;
  }

  wait(SFB_CMD, (command("train") and ("horse" in argument)) 
       and (activator.type == UNIT_ST_PC));

    pc := activator;
    secure(pc, lostpc);
    {
    block;
    if("$owner" in self.extra)
    {
      act("This horse has already been trained.",
      A_SOMEONE, pc, null, null, TO_CHAR);
      goto begin;
    }
/* training and claiming sequence */
    {
      claim := "$"+pc.name;
      owner := {""};
      addstring(owner, claim);

      mine := claim;
      log(mine);
      addextra(self.extra, {"$trained"}, pc.name);
      addextra(self.extra, {"$owner"}, pc.name);
      addextra(self.extra, owner, "");

      act("You have trained the horse to your scent.",
          A_SOMEONE, pc, null, null, TO_CHAR);

      act("$1n trains a horse.",
  	  A_SOMEONE, pc, null, null, TO_REST);
    }
  }

/* fixme */
   :begin:
   wait(SFB_CMD, (command("flee") 
   or command(CMD_ENTER)
   or command(CMD_OPEN) 
   or command(CMD_CLOSE) 
   or command(CMD_EXITS)
   or command(CMD_DOWN) 
   or command(CMD_UP) 
   or command(CMD_EAST)
   or command(CMD_WEST) 
   or command(CMD_NORTH) 
   or command(CMD_SOUTH)
   or command("bridle") and ("horse" in argument)
   or command("unbridle") and ("horse" in argument)
   or command("saddle") and ("horse" in argument)
   or command("unsaddle") and ("horse" in argument)
   or command("put") and ("saddle bags on horse" in argument)
   or command("get") and ("saddle bags from horse" in argument)
   or command("put") and ("lead on horse" in argument)
   or command("get") and ("lead from horse" in argument)
   or command("tether") and ("horse" in argument)
   or command("untether") and ("horse" in argument)
   or command("dismount")
   or command("mount") and ("horse" in argument))
   and ((activator.type == UNIT_ST_PC)
   and (mine in self.extra) and ("$"+activator.name == mine)));
   pc := activator;
   secure(pc, lostpc);
   {
   if(not(mine in self.extra))
   {
      act("This is not your horse.",
      A_SOMEONE, pc, null, null, TO_CHAR);
      goto start;
   }
   :skip1:
   if("$mounted" in self.extra)
   {
	if(command(CMD_RIDE) and command(CMD_SOUTH))
	{
	   goto start;
	}
	if(command(CMD_RIDE) and command(CMD_NORTH))
	{
	   goto start;
	}
	if(command(CMD_RIDE) and command(CMD_EAST))
	{
	   goto start;
	}
	if(command(CMD_RIDE) and command(CMD_WEST))
	{
	   goto start;
	}
	if(command(CMD_EAST))
	{
	   if(activator.outside != self)
	   {
	       goto start;
	   }
	   block;
	   goto start;
	}
	if(command(CMD_WEST))
	{
	   if(activator.outside != self)
	   {
	      goto start;
	   }
	   block;
	   goto start;
	}
	if(command(CMD_NORTH))
	{
	   if(activator.outside != self)
	   {
	      goto start;
	   }
	   block;
	   goto start;
	}
	if(command(CMD_SOUTH))
	{
	   if(activator.outside != self)
	   {
	     goto start;
	   }
	   block;
	   goto start;
	}
	if(command(CMD_OPEN))
	{
		  block;
		  act("You must dismount to open anything.",
		  A_SOMEONE, pc, null, null, TO_CHAR);
		  goto start;
	}
	else if(command(CMD_ENTER))
	{
		 block;
		 act("Your horse doesn't want to enter that.",
		 A_SOMEONE, pc, null, null, TO_CHAR);
		 goto start;
	}
	else if(command(CMD_CLOSE))
	{
		 block;
		 act("You must dismount to close anything.",
		 A_SOMEONE, pc, null, null, TO_CHAR);
		 goto start;
	 }
	 else if(command(CMD_UP))
	 {
		 block;
		 act("Your horse is afraid to go up.",
		 A_SOMEONE, pc, null, null, TO_CHAR);
		 goto start;
	 }
	 else if(command(CMD_DOWN))
	 {
		 block;
		 act("Your horse is afraid to go down.",
		 A_SOMEONE, pc, null, null, TO_CHAR);
		 goto start;
	 }
	 if(command("flee"))
	 {
	 	 block;
		 exec("flee", self);
		 goto start;

	 }
	 else if(command(CMD_EXITS))
	 {
		 block;
		 unsecure(pc);
		 link(pc, self.outside);
		 secure(pc, start);
		 exec("exits", pc);
		 unsecure(pc);
		 link(pc, self);
		 goto start;
	  }
   }
   :bridle:
   if(command("bridle") and ("horse" in argument))
   {

     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to bridle me.", self);
	goto start;
     }
     block;
     worn := findunit(self, "bridle", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
	act("Your horse is already wearing a bridle.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     worn := findunit(self, "lead", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
	act("Your horse is wearing a lead.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     else
     {
     bri := findunit(pc, "bridle", FIND_UNIT_INVEN, null);
     if(bri == null)
     {
	  act("You aren't carrying a bridle!",
	  A_SOMEONE, pc, null, null, TO_CHAR);
	  goto start;
     }
     link(bri, self);
     addequip(bri, 7);
     act("You place a bridle on your horse.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("$1n places a bridle on $1s horse.",
     A_SOMEONE, pc, null, null, TO_REST);
     unsecure(pc);
     goto start;

     }
  }
  :saddle:
  if(command("saddle") and ("horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell "+own+" someone just tried to saddle me.", self);
	goto start;
     }
     block;
     worn := findunit(self, "saddle", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
		act("Your horse is already wearing a saddle.",
		A_SOMEONE, pc, null, null, TO_CHAR);
		goto start;
     }
     else
     {
	sad := findunit(pc, "saddle", FIND_UNIT_INVEN, null);
	if(sad == null)
	{
	       act("You are not carrying a saddle!",
	       A_SOMEONE, pc, null, null, TO_CHAR);
	       goto start;
	}
	link(sad, self);
	addequip(sad, 13);
	act("You place a saddle on your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);

	act("$1n places a saddle on $1s horse.",
	A_SOMEONE, pc, null, null, TO_REST);
	unsecure(pc);
	goto start;
     }
  }
  :bags:
  if(command("put") and ("saddle bags on horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell "+own+" someone just tried to put saddle bags on me.",
		self);
	goto start;
     }
     block;
     worn := findunit(self, "bags", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
	act("Your horse is already wearing saddle bags!",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     else
     {
	bag := findunit(pc, "bags", FIND_UNIT_INVEN, null);
	if(bag == null)
	{
	   act("You are not carrying any saddle bags!",
	   A_SOMEONE, pc, null, null, TO_CHAR);
	   goto start;
	}
	link(bag, self);
	addequip(bag, 14);
	act("You place some saddle bags on your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);

	act("$1n places some saddle bags on $1s horse.",
	A_SOMEONE, pc, null, null, TO_REST);
	unsecure(pc);
	goto start;
     }
  }
  :lead:
  if(command("put") and ("lead on horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to lead me.", self);
       goto start;
     }
     block;
     worn := findunit(self, "lead", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
	act("Your horse is already wearing a lead",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     worn := findunit(self, "bridle", FIND_UNIT_EQUIP, null);
     if (worn != null)
     {
	act("Your horse is wearing a bridle",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     if ("$tether" in self.extra)
     {
	act("You can not lead a tethered horse",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     else
     {
	lead := findunit(pc, "lead", FIND_UNIT_INVEN, null);
	if(lead == null)
	{
	   act("You are not carrying a lead!",
	   A_SOMEONE, pc, null, null, TO_CHAR);
	   goto start;
	}
	link(lead, self);
	addequip(lead, 7);
	addextra(self.extra, {"$lead"}, pc.name);
	act("You place a lead on your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);

	act("$1n places a lead on $1s horse.",
	A_SOMEONE, pc, null, null, TO_REST);
	exec("follow " +pc.name, self);
	unsecure(pc);
	goto start;
     }
  }
  :bridle1:
  if(command("unbridle") and ("horse" in argument))
  {
     if (not(mine in self.extra))
     {
		act("This is not your horse.",
		A_SOMEONE, pc, null, null, TO_CHAR);
   		ept := ("$owner" in self.extra);
		own := ept.descr;
		exec("tell " +own + " someone just tried to unbridle me.", self);
		goto start;
     }
     block;
     bri := findunit(self, "bridle", FIND_UNIT_EQUIP, null);
     if(bri == null)
	{
	   act("Your horse is not wearing a bridle!",
	   A_SOMEONE, pc, null, null, TO_CHAR);
	   goto start;
	}
	unequip(bri);
	link(bri, pc);
	act("You remove a bridle from your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);

	act("$1n removes a bridle from $1s horse.",
	A_SOMEONE, pc, null, null, TO_REST);
	unsecure(pc);
	goto start;
  }
  :saddle1:
  if(command("unsaddle") and ("horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to unsaddle me.", self);
	goto start;
     }
     block;
     sad := findunit(self, "saddle", FIND_UNIT_EQUIP, null);
     if(sad == null)
     {
	act("Your horse is not wearing a saddle!",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     unequip(sad);
     link(sad, pc);
     act("You remove a saddle from your horse.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("$1n removes a saddle from $1s horse.",
     A_SOMEONE, pc, null, null, TO_REST);
     unsecure(pc);
     goto start;
  }
  :bags1:
  if(command("get") and ("saddle bags from horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to take my saddle bags.",
		self);
      goto start;
     }
     block;
     bag := findunit(self, "bags", FIND_UNIT_EQUIP, null);
     if(bag == null)
     {
	act("Your horse is not wearing any saddle bags!",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     unequip(bag);
     link(bag, pc);
     act("You remove some saddle bags from your horse.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("$1n removes some saddle bags from $1s horse.",
     A_SOMEONE, pc, null, null, TO_REST);
     unsecure(pc);
     goto start;
  }
  :lead1:
  if(command("get") and ("lead from horse" in argument))
  {
     if (not(mine in self.extra))
     {
	act("This is not your horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to take my lead.", self);
	goto start;
     }
     block;
     lead := findunit(self, "lead", FIND_UNIT_EQUIP, null);
     if(lead == null)
     {
	act("Your horse is not wearing a lead!",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
     }
     unequip(lead);
     subextra(self.extra, "$lead");
     link(lead, pc);
     act("You remove a lead from your horse.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("$1n removes a lead from $1s horse.",
     A_SOMEONE, pc, null, null, TO_REST);
     exec("follow", self);
     unsecure(pc);
     goto start;
  }
  if(command("mount") and ("horse" in argument))
  {
    :mount:
    block;
    pc := activator;
    if ("$tether" in self.extra)
    {
	act("You can not ride a tethered horse.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
    }
    w1 := findunit(self, "bridle", FIND_UNIT_EQUIP, null);
    if (w1 == null)
    {
	act("Your horse is not wearing a bridle.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
    }
    w2 := findunit(self, "saddle", FIND_UNIT_EQUIP, null);
    if (w2 == null)
    {
	act("Your horse is not wearing a saddle.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
    }
    if("$shoed" in self.extra)
    {
      goto mountmebaby;
    }
    act("How dare you try to ride your horse with no shoes!",
    A_SOMEONE, pc, null, null, TO_CHAR);
    goto start;

    :mountmebaby:
    if (mine != "$"+activator.name)
    {
       act("You can not mount this horse.",
       A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to mount me.", self);
       goto start;
    }
    addextra(self.extra, {"$mounted"}, pc.name);

    act("You mount a horse.",
    A_SOMEONE, pc, null, null, TO_CHAR);

    act("$1n mounts a horse.",
    A_SOMEONE, pc, null, null, TO_REST);
    link(pc, self);
      goto start;

  }
  :dismount:
  if(command("dismount"))
  {
    :dismt:
    pc := activator;
    block;
    subextra(self.extra, "$mounted");

    link(pc, self.outside);
    act("You dismount a horse.",
    A_SOMEONE, pc, null, null, TO_CHAR);

    act("$1n dismounts a horse.",
    A_SOMEONE, pc, null, null, TO_REST);
	goto start;
  }
  :tether:
  if(command("tether") and ("horse" in argument))
  {
    if (not(mine in self.extra))
    {
       act("This is not your horse.",
       A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to tether me.", self);
       goto start;
    }
    block;
    w1 := findunit(self, "lead", FIND_UNIT_EQUIP, null);
    if (w1 != null)
    {
	act("You can not tether a horse your are leading.",
	A_SOMEONE, pc, null, null, TO_CHAR);
	goto start;
    }
    if(not("$tether" in self.extra))
    {
       addextra(self.extra, {"$tether"}, pc.name);
       act("Your horse is tethered.",
       A_SOMEONE, pc, null, null, TO_CHAR);

       act("$1n tethers a horse.",
       A_SOMEONE, pc, null, null, TO_REST);
       goto start;
    }
       act("Your horse is already tethered.",
       A_SOMEONE, pc, null, null, TO_CHAR);
    goto start;
  }
  :untether:
  if(command("untether") and ("horse" in argument))
  {
    if (not(mine in self.extra))
    {
       act("This is not your horse.",
       A_SOMEONE, pc, null, null, TO_CHAR);
	ept := ("$owner" in self.extra);
	own := ept.descr;
	exec("tell " +own + " someone just tried to untether me.", self);
	goto start;
    }
    block;
    if("$tether" in self.extra)
    {
       subextra(self.extra, "$tether");
       act("Your horse is untethered.",
       A_SOMEONE, pc, null, null, TO_CHAR);

       act("$1n untethers a horse.",
       A_SOMEONE, pc, null, null, TO_REST);
       goto start;
    }
       act("Your horse is already untethered.",
       A_SOMEONE, pc, null, null, TO_CHAR);
    goto start;
  }

  }

    :lostpc:
	goto start;

}
dilend


dilbegin horse2();
var
  pc : unitptr;
  horsed : string;
code
{

  :init:
  heartbeat := PULSE_SEC*15;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command(CMD_EAST) or command(CMD_WEST)
		 or command(CMD_NORTH) or command(CMD_SOUTH)) and
      (activator.type == UNIT_ST_PC));
   horsed := "$"+activator.name;
   if(not(horsed in self.extra))
   {
     goto start;
   }
    pc := activator;
    secure(pc, lostpc);
  :dirs:
  if(command(CMD_EAST))
  {
       goto deathseq;
  }
  if(command(CMD_WEST))
  {
       goto deathseq;
  }
  if(command(CMD_NORTH))
  {
       goto deathseq;
  }
  if(command(CMD_SOUTH))
  {
       goto deathseq;
  }
      goto start;

  :deathseq:
  {
    interrupt(SFB_CMD, command(CMD_UP), lostpc);
    interrupt(SFB_CMD, command(CMD_DOWN), lostpc);
    interrupt(SFB_CMD, command(CMD_EXITS), lostpc);
    interrupt(SFB_CMD, command(CMD_OPEN), lostpc);
    interrupt(SFB_CMD, command(CMD_CLOSE), lostpc);
    interrupt(SFB_CMD, command(CMD_ENTER), lostpc);
    interrupt(SFB_CMD, command("flee"), lostpc);
    interrupt(SFB_CMD, command("bridle") and ("horse" in argument), lostpc);
    interrupt(SFB_CMD, command("saddle") and ("horse" in argument), lostpc);
    interrupt(SFB_CMD, command("put") and ("saddle bags on horse" in
	      argument), lostpc);
    interrupt(SFB_CMD, command("put") and ("lead on horse" in argument),
	      lostpc);
    interrupt(SFB_CMD, command("unbridle") and ("horse" in argument),
	      lostpc);
    interrupt(SFB_CMD, command("unsaddle") and ("horse" in argument),
	      lostpc);
    interrupt(SFB_CMD, command("get") and ("saddle bags from horse" in
	      argument), lostpc);
    interrupt(SFB_CMD, command("get") and ("lead from horse" in argument),
	      lostpc);
    interrupt(SFB_CMD, command("mount") and ("horse" in argument), lostpc);
    interrupt(SFB_CMD, command("dismount"), lostpc);
    interrupt(SFB_CMD, command("tether") and ("horse" in argument), lostpc);
    interrupt(SFB_CMD, command("untether") and ("horse" in argument),
	      lostpc);
    interrupt(SFB_CMD, command(CMD_EAST), dirs);
    interrupt(SFB_CMD, command(CMD_WEST), dirs);
    interrupt(SFB_CMD, command(CMD_NORTH), dirs);
    interrupt(SFB_CMD, command(CMD_SOUTH), dirs);
    pause;
    pause;
    pause;
    pause;
    pause;
    pause;
    pause;
    if("$lead" in self.extra)
    {
       goto start;
    }
    if("$tether" in self.extra)
    {
       goto start;
    }
    if("$mounted" in self.extra)
    {
       goto start;
    }
    if("$stabled" in self.extra)
    {
       goto start;
    }
    exec("emote misses its master and begins to wander.", self);
    walkto(findroom("urland/glue_factory"));
    exec("say I ride joyously to Valhalla.", self);
    pause;
    act("The gears and knives groan into life.",
    A_SOMEONE, pc, null, null, TO_ALL);
    pause;
    act("It's lucky that you found a handle to hold onto.",
    A_SOMEONE, pc, null, null, TO_ALL);
    pause;
    act("A horse screams in agony as it is pulled through the machine.",
    A_SOMEONE, pc, null, null, TO_ALL);
    pause;
    act("The machine groans to a stop, and it smells like someone farted.",
    A_SOMEONE, pc, null, null, TO_ALL);
    destroy(self);
    goto start;
  }
    :lostpc:
	goto start;

}
dilend

dilbegin aware catchit();
var
pctest:string;
pcptr:unitptr;
code
{
:there:
wait(SFB_CMD, TRUE and
(activator==self));
pctest:=getword(argument);
pcptr:=findunit(self, pctest, FIND_UNIT_SURRO|FIND_UNIT_INVEN, null);

   if ((command(CMD_SHOUT)) or
   (command (CMD_STEAL)) or
   (command (CMD_CAST)) or
   (command (CMD_PICK)))
     block;
   else if (command(CMD_KILL) and
 (pcptr.type==UNIT_ST_PC))
     block;
   else if (command(CMD_HIT)and
 (pcptr.type==UNIT_ST_PC))
     block;
		 else goto there;

   goto there;

}
dilend


dilbegin famblock();
var
  onme : unitptr;

code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command(CMD_WEST) or command(CMD_EAST)
  or command(CMD_NORTH) or command(CMD_SOUTH)
  or command(CMD_RIDE)));

  if(not("$mounted" in self.extra))
  {
    goto start;
  }
  if(activator.type == UNIT_ST_PC)
  {
    goto start;
  }
  onme := findunit(self, activator.name, FIND_UNIT_INVEN, null);
  if (onme == null)
  {
     goto start;
  }

   block;
   goto start;
}
dilend
end


				horse_seller
names {"horse seller"}
title "the horse seller"
descr "The horse seller stands here ready to make a deal."
extra {}
"    This man looks as if he has been working on horses for a long
time.  He has a knowledged look in his eye, and obviously loves the
beasts with which he deals."
M_HUMAN_WARRIOR_SWORD(35,SEX_MALE)

#define FART ""
dilbegin stable2();
var
  i   : integer;
  bud : unitptr;
  tf     : integer;
  horse : unitptr;
  item : unitptr;
  pc : unitptr;
  new   : unitptr;
  color : string;
  home : string;
  extvar : string;
  myname : string;
  marked : string;
  my_horse : string;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command("order") and ("horse" in
      argument)) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
  {
    block;
    pause;
    exec("say Ho there!  Glad to have your business.", self);
    pause;
    bud := findunit(self, "horse", FIND_UNIT_SURRO, null);

    if("horse" in pc.inside.name)
    {
      exec("say I'm sorry, but you already have one horse", self);
      goto start;
    }
    tf := transfermoney(pc, self, 62720);
    if(tf == FALSE)
    {
     exec("say You Scoundrel!  You do not have the money!" +
	    "Get out of my establishment!", self);
     goto start;
    }
    horse := load("horse@urland");
    pause;
    exec("say Here is your horse.", self);
    horse := findunit(self, "horse", FIND_UNIT_INVEN, null);
    link(horse, self.outside);
    pause;
    exec("say I suggest that you get your horse shoed next door."+
	   "  You can buy tack across town.", self);
    pause;
    exec("say This book should help you to care for and ride your horse",
	   self);
    pause;
    act("The horse seller gives you a small book.",
       A_SOMEONE, pc, null, null, TO_CHAR);

    act("The horse seller gives a small book to $1n.",
	 A_SOMEONE, pc, null, null, TO_REST);
    item := load("book@urland");
    link(item, pc);
    item := load("lead@urland");
    link(item, pc);
    pause;
    exec("say What would you like to name your horse?", self);

     i := 0;
     while (i < 5)
     {
        wait(SFB_CMD, activator #= pc);

        if(command(CMD_SAY) and (activator.type == UNIT_ST_PC))
        {
	    myname := argument;
	    goto color;
        }
	    exec("say Say the name please.", self);
            i := i + 1;
     }
    :color:
    exec("say What color horse would you like?", self);

     i := 0;
     while (i < 5)
     {
        wait(SFB_CMD, activator #= pc);

        if(command(CMD_SAY) and (activator.type == UNIT_ST_PC))
        {
	    color := argument;
	    goto birthplace;
        }
	exec("say Say the color.", self);
       	i := i + 1;
     }

    :birthplace:
    pause;
    exec("say Would you like a warhorse from Udgaard, Midgaard" +
	 ", or Urland?", self);
    pause;
    exec("say Say Udgaard, Midgaard, or Urland.", self);
    wait(SFB_CMD, (command(CMD_SAY)));
    block;
    if("Udgaard" in argument)
    {
      home := "Udgaard";
      goto add;
    }
    if("Midgaard" in argument)
    {
      home := "Midgaard";
      goto add;
    }
    if("Urland" in argument)
    {
      home := "Urland";
      goto add;
    }
    goto birthplace;

    :add:
    horse := findunit(self, "horse", FIND_UNIT_SURRO, null);
    extvar := "Standing before you is a magnificent "+color+
	      " horse named " +myname+ ".  This mighty warhorse " +
	    "was bred in " +home+ " and will carry it's rider through "+
	      "any battle.  You might assume that this horse is descended" +
	    " from that which bore Sir Gehron in the Great War.  " +
	    "This horse belongs to " +pc.name+ ".";
    marked := "This horse belongs to " +pc.name+ ".";
    exec("say Your horse is the color " +color+ " and it was born "+
	 "in " +home+ ".", self);
    addextra(horse.extra, {FART}, extvar);
    addextra(horse.extra, {"brand"}, marked);
    addstring(horse.names, myname);
    horse.outside_descr := "A branded horse named " +myname+
    " is standing here.";
    horse.inside_descr := "You are sitting on your horse.";
    goto start;
  }
  :lostpc:
      goto start;

}
dilend
end

				comm1

names {"zoober","yibbish"}
title "Zoober Yibbish"
descr "Zoober Yibbish walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end

				comm2

names {"inkle","winkfarber"}
title "Inkle Winkfarber"
descr "Inkle winkfarber walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end

				comm3

names {"Oorken","Mistoffen"}
title "Oorken Mistoffen"
descr "Oorken Mistoffen walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end

				comm4

names {"Gnart","Yogoort"}
title "Gnart Yogoort"
descr "Gnart Yogoort walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end

				comm5

names {"amkblesh","findleyoot"}
title "Amkblesh Findleyoot"
descr "Amkblesh Findleyoot walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end

					comm6

names {"lennis","phlosch"}
title "Lennis Phlosch"
descr "Lennis Phlosch walks about."
extra {}
"This is one of the friendly people from the town.  From his poor clothes it
is obvious that he does not have much money but seems content in his role as
a man of the land.  He is smiling broadly and looks at you warmly."
M_HUMAN_WARRIOR_NATURAL(29,SEX_MALE)
money 3 SILVER_PIECE, 5 COPPER_PIECE
special SFUN_RANDOM_ZONE_MOVE time 60 bits SFB_RANTIME
special SFUN_SCAVENGER time 60 bits SFB_RANTIME
special SFUN_PAIN_INIT time 300 bits SFB_RANTIME
"10 Csmile@
 20 Csay Nice weather we are having today :)@
 30 S10@
 40 d10say %s, I would like to welcome you to our town.@
 50 J10@"
end
				alchemist
names {"alchemist","lance"}
title "Lance"
descr
"Lance the alchemist is here mixing potions."
extra {}
"       As you walked into the room, you were absolutely sure you saw a
sign mentioning something about an alchemist.  This guy is definitely not
what springs to mind when one thinks of alchemists!  As you see the
careless nature with which this man handles mixing, you'd guess he'd been
at it for oh....say, a day or two.  He turns to you with a wild look in
his eyes, you can tell that working with potions is something that this
fellow loves to do.  You can also notice the numerous blast marks on the
man's apron and you begin to feel just a little bit nervous. Lance wears
very bright clothing and smiles happily.  Still feeling a little unsure
about his ability to get rid of major demons or dragons with his magical
knowledge, you can see that this poor man still wears a sword :)"
M_HUMAN_WARRIOR_SWORD(35,SEX_MALE)
money 4 SILVER_PIECE, 2 COPPER_PIECE
special SFUN_PAIN_INIT time 60 bits SFB_RANTIME
"10 Cemote begins mixing two very volatile looking potions together.@
 20 Cemote marvels as the resulting myriad of colors fill the room.@
 30 Cemote looks at you and screams 'Duck!!!!!!!!!!!!!'@
 40 Cemote dives under the table as an explosion thunders through the room.@
 50 Cemote dusts himself off, as he sighs loudly.@"

special SFUN_SHOP_INIT
"Profit sell = 130
Profit buy = 10
Production = ~p_rpoison@midgaard~

Trade types =
"+ITEM_SCROLL+ITEM_WAND+ITEM_POTION+ITEM_STAFF+"
Msg1 = ~$1n says, 'I've got no such item!'~
Msg2 = ~$1n says, '$3n, you haven't even got it!'~
Msg3 = ~$1n says, 'I don't trade with things such as $2n'~
Msg4 = ~$1n says, 'I can't afford it, sorry!'~
Msg5 = ~$1n says, '$3n, you can't afford $2n'~
Msg6 = ~$1n says, 'That's %s for $2n'~
Msg7 = ~$1n says, 'Thank you $3n, here are %s for $2n.'~
Hours1 = 4 12
Hours2 = 13 23"
end

				necromancer
names {"apprentice","christopher"}
title "Christopher the apprentice"
descr
"Christopher the apprentice sits here studying."
extra {}
"	As you look at the apprentice, you decide that it might be a good
idea to leave him alone to his studies.  This guy looks like he has had
his nose in way too many books.  As you look at him closer you see that
his forehead is wrinkled in disgust at all of the interuptions he has
recieved while trying to study. Christopher picked up the magical arts
about the same time as his good buddy lance the 'alchemist', after he lost
the village tough-man contest to the local blacksmith Brian.  He seems
confident that someday he will be a great wizard, but for now you notice
he still wears a very nice sword, erm...just for security of course...
in case a dragon happens to pop his head in the door or something."
M_HUMAN_WARRIOR_SWORD(32,SEX_MALE)
money 4 SILVER_PIECE
end
				friar
names {"friar","ron"}
title "Friar Ron"
descr
"Friar Ron is here helping the poor. He has been working out lately."
extra {}
"	He looks like a very well trained man in religous matters as well as
the sword. He has just finished a very prolonged argument with the local
villiage blacksmith Brian. Like so many other people in the town, you get
feeling that Ron is not really a priest, but people look up to him anyway."
M_HUMAN_WARRIOR_SWORD(32,SEX_MALE)
money 4 SILVER_PIECE
end
				vil_black
names {"blacksmith","brian"}
title "Brian the Blacksmith"
descr
"Brian is here making horseshoes for the stables."
extra {}
"	Brian looks like a very strong man from all those years of lifting
iron.  As you look at him, he turns to you and says, 'What do you want Ron?
Oh, you're not Ron..Hi there, how may I help you today?  Interest you in a
fine pair of horseshoes maybe?'"
M_HUMAN_WARRIOR_AXE (28,SEX_MALE)
money 3 SILVER_PIECE, 4 COPPER_PIECE
/*
special SFUN_PAIN_INIT time 60 bits SFB_RANTIME
"10 Cemote picks up his latest piece of work and examines it.@
 20 Cemote smiles proudly.@
 30 Cemote bangs away at his anvil...sparks fly!@
 40 Cemote begins to sing..'You load 16 tons...whaddaya get?'@
 50 Cemote sings..'Another day older and deeper in debt.'@
 60 Cemote rubs his sore back.@
 70 Cemote sings..'St. Peter don't you call me...'@
 80 Cemote sings..'Cause I can't go....'@
 90 Cemote sings..'I owe my soul....'@
 100 Cemote sings..'To the company store...'@
 110 J10@"
*/
dilbegin smith();
var
  pc : unitptr;
  smith : unitptr;
  bud : unitptr;
  got : string;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command(CMD_SAY) and ("shoe horse please" in argument)) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
  {
     block;
     smith := findunit(self, "blacksmith", FIND_UNIT_SURRO, null);
     if (smith == null)
     {
       act("There is no blacksmith here!",
       A_SOMEONE, pc, null, null, TO_CHAR);
	 goto start;
     }
     got := "$"+activator.name;
     bud := findunit(self, "horse", FIND_UNIT_SURRO, null);
     if (not(got in bud.extra))
     {
	 exec("say This isn't your horse " +pc.name+ ".", self);
	 goto start;
     }
     if("$shoed" in bud.extra)
     {
	  exec("say Your horse is already shoed.", self);
	  goto start;
     }
     addextra(bud.extra, {"$shoed"}, pc.name);
     act("The blacksmith puts some iron horseshoes on your mount.",
     A_SOMEONE, pc, null, null, TO_CHAR);

     act("The blacksmith puts some iron horseshoes on $1n's mount.",
     A_SOMEONE, pc, null, null, TO_ROOM);
     unsecure(pc);
     goto start;
  }

     :lostpc:
	goto start;
}
dilend
end
				screeton
names {"screeton","wizard"}
title "Screeton the Grand Wizard"
descr
"Screeton the Grand Wizard is here babbling physics equations."
extra {}
"	Screeton is an old grey haired man that looks VERY smart.  He carries
under one arm a HUGE book, and this poor man's hair (what's left of it) is
frazzled beyond any hope of recovery. "
M_HUMAN_MAGE_ACID (39,SEX_MALE,"cast acid drop")
alignment 1000
money 4 SILVER_PIECE, 7 COPPER_PIECE
special SFUN_PAIN_INIT time 60 bits SFB_RANTIME
"10 S150@
 20 d150say %s, Are you my friend?@
 30 d150say %s, I want you to grow up to be a good alchemist.@
 150 J10@"
end
				vil_horse
names {"horse"}
title "the horse"
descr
"The horse is here eating hay."
extra {}
"	You see a very big horse.  From the looks of his hind quaters, he
might be able to REALLY kick hard."
M_HORSE_HEAVY(SEX_MALE)
level 27
end


				vil_horse2
names {"horse"}
title "the horse"
descr
"A retired horse stands here munching grass."
extra {}
"	You see a horse which has been retired from service.
>From the looks of his hind quaters, it might be able to kick
REALLY hard.  Its inquisitive eyes seem to peer into your soul."
M_HORSE_HEAVY(SEX_MALE)
level 24
end

				marr
names {"marr"}
title "Marr the Great One"
descr
"Marr is here gloating about how good he is."
extra {}
"	He looks like a very conceited man.  He is talking about playing poker
with King Welmar and slaying red dragons.  From what you can tell, Marr is full
of hot air."
BASE_HUMAN(32,SEX_MALE)
money 4 SILVER_PIECE
end

				stanley
names {"stanley","dog"}
title "Stanley"
descr
"Stanley the dog is here licking himself."
extra {}
"	This is a three legged dog that has been abandoned by its owners.  You
don't know if you have the heart to hit such a creature."
M_DOG_BEAGLE(SEX_MALE)
level 25
alignment +800 /* Poor sucker! */
dilcopy fido@function("","");
end

					receptionist

names {"receptionist", "silnia"}
title "Silnia Begia"
descr "Silnia Begia the receptionist waits to rent you
a room."
extra {}
"The receptionist sits behind the reception desk waiting for
someone to rent a room.  She is a matronly looking woman, and looks as if
she would love to rent you a room."
BASE_HUMAN(28,SEX_FEMALE)
end
					chef

names {"chef", "schlonk"}
title "Schlonk Milnock"
descr "Sclonk Milnock stands here preparing a meal."
extra {}
"The chef loves to prepare food for those that visit Urland.
He specializes in charred meat, and is happy when the
potatos don't get bugs."
BASE_HUMAN(26,SEX_MALE)
end


				innkeeper

names {"innkeeper", "gnimyol"}
title "Gnimyol Yummybuts"
descr "Gnimyol Yummybuts the innkeeper stands here waiting
to kiss up to you."
extra {}
"The inkeeper looks like a happy man, and his cheeks are rosy red.
Perhaps he drinks a bit too much of the old spirits."
BASE_HUMAN(30,SEX_MALE)
end

					barkeep

/* Prancing Pony */
names {"barkeep", "jendle"}
title "Jendle Flackle"
descr "Jendle Flackle the barkeep awaits your order."
extra {}
"The barkeep is a stocky individual who also happens to
smell like a horse.  He seems to like being pushed around
by the barmaids, who appear two be at least twice his size
in muscle mass."
M_HUMAN_WARRIOR_AXE (31,SEX_MALE)
special SFUN_SHOP_INIT
"Profit sell = 150
Profit buy = 1
Production = ~beer_barrel@midgaard~ ~beer_bottle@midgaard~
~tuborg@udgaard~ ~firebreather@midgaard~
Msg1 = ~$1n says, 'I've got no such item!'~
Msg2 = ~$1n says, '$3n, you haven't even got it!'~
Msg3 = ~$1n says, 'I don't trade with things such as $2n'~
Msg4 = ~$1n says, 'I can't afford it, sorry!'~
Msg5 = ~$1n says, '$3n, you can't afford $2n'~
Msg6 = ~$1n says, 'That's %s for $2n'~
Msg7 = ~$1n says, 'Thank you $3n, here are %s for $2n.'~
Hours1 = 4 12
Hours2 = 13 23"
end


%objects
				ticket

names {"claim ticket", "ticket"}
title "a claim ticket"
descr "a claim ticket for a horse sits here"
weight 1
manipulate {MANIPULATE_TAKE}
end

				book
names {"book"}
title "a small book on horses"
descr "A small book with a picture of a horse on the cover lies on the ground."
extra {}
"There are some words in this book"
extra {"words"}
"&l
You have just puchased a horse, and you wonder to yourself, how do I
take care of my mount?

To get better aquainted with your new friend, I suggest that you:
>train horse
It is only necessary to do this once, and the horse will be yours forever.
You will not be able to ride your horse before you do a few things.

If you do not do this, good luck riding, it's not gonna work.

First, you need to remember the most important rule:
If you do not tether your horse, it will wander away to its death.
I'd suggest doing this before you finish reading, or your horse is
gonna be in a world of hurt.
To tether your horse, you simply have to type:
>tether horse
To untether your horse, you must type:
>untether horse

Next, you need to visit the blacksmiths shop, and get your horse shoed.
To lead your horse around, you must take the complimentary lead
provided by the stables, and type:
>put lead on horse
Your horse will now follow you almost anywhere.  To stop this behavior,
you need to type:
>get lead from horse

Once you have your horse following you, you can visit the blacksmith
where it is necessary to say:
>shoe horse please
The blacksmith will take care of the rest.

So, at this point you are almost good to go for a ride.
Walk over to the tack shop, where you will need to buy a saddle and
bridle for your horse.  If your horse is not wearing these things,
you won't be able to ride it.
Once purchased, you must respectively type:
>saddle horse     (to place a saddle on your mount)
>unsaddle horse  (to remove it)
>bridle horse      (to place a bridle on your mount)
>unbridle horse   (to remove it)

You can also buy saddle bags for your horse.
To put them on type:
>put saddle bags on horse
To remove them:
>get saddle bags from horse

Once your horse is wearing a saddle and bridle, you can type:
>mount horse (to get on)
>dismount    (to get off)

To ride, you must use the ride command:
examples:
ride east
ride e
r east
r e

sorry, the normal directional commands will not work on a horse,
and your pets and familiars can't ride, so don't bother trying.

When you are tired of riding your horse, you need to go to a
stable where you can type:
>stable horse
The stable girl will take care of the rest, free of charge.
To get your horse back, go to the stables and type:
>unstable horse

There are a few more things which you should know about your horse.
Your horse is unable to go UP, DOWN, ENTER things, and you can
not OPEN or CLOSE things while riding.
Your horse is yours, nobody else can mount it or ride it.
Your horse is yours, nobody can take things from or put things
on it, tether or untether it, stable or unstable it.
If you try to flee from battle, your horse will attempt to flee for you.
Use your horse well, and it will treat you kindly.

You can find fine stables outside Udgaard, in Midgaard, and in Urland.
--------------------------------------------------------------------------

All questions, comments, problems can be addressed to:

Isildur 

Ideas are welcome, bugs must be reported for the benefit of all,
and typos are just a fact of life.

Have fun with your horses, and don't ride too fast.
P.S. Look for the cheat sheet which just fell out of your
book."

weight 1
dilbegin read();
var
  pc : unitptr;
  cheat : string;
  item : unitptr;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command("look") and ("words" in argument)) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
   {

     if (not("$read" in self.extra))
     {
	item := load("cheat_sheet@urland");
	act("A small cheat sheet falls upon the ground.",
	A_SOMEONE, pc, null, null, TO_CHAR);

	act("A small cheat sheet falls out of $1ns book.",
	 A_SOMEONE, pc, null, null, TO_REST);
	link(item, pc.outside);
	addextra(self.extra, {"$read"}, pc.name);
	goto start;
     }

   }
	goto start;

     :lostpc:
	goto start;
}
dilend
manipulate {MANIPULATE_TAKE}
end

				cheat_sheet
names {"cheat sheet", "sheet"}
title "a horse cheat sheet"
descr "A small card lying here says `Cheat sheet.'"
manipulate {MANIPULATE_TAKE}
extra {}
"&l
This is your complimentary I don't want that damn book anymore
horse cheat sheet.

Horse commands:
train horse
shoe horse please

bridle horse
saddle horse
put saddle bags on horse
put lead on horse

unbridle horse
unsaddle horse
get saddle bags from horse
get lead from horse

mount horse
dismount

tether horse
untether horse

stable horse
unstable horse

ride <direction>

Remeber to tether your horse, and have fun riding."
weight 1
cost 1 IRON_PIECE
end

				lead
names {"lead"}
title "lead"
descr "A jumble of rope sits here."
extra {}
"    This is most obviously a lead that you might use on
a horse."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 3
cost 3 SILVER_PIECE
end

				stall_key
names {"stall key", "key"}
title "a stall key"
descr "A large key hangs on the wall."
extra {}
"    This is most obviously a key to the stalls of Urland."
manipulate {MANIPULATE_TAKE}
weight 1
dilbegin key();
var
  pc : unitptr;
code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING), skip);

  :start:
  wait(SFB_CMD, (command("unlock")) and
      (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
   {
      pause;
      pause;
      destroy(self);
   }
	goto start;

     :lostpc:
	goto start;
}
dilend
end


				bridle
names {"bridle"}
title "a bridle"
descr "A jumble of leather sits here."
extra {}
"    This is most obviously a bridle that you might use on
a horse."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 3
cost 3 SILVER_PIECE
end


				saddle1
names {"wooden saddle", "saddle"}
title "a large wooden saddle"
descr "A large wood construction sits on the ground here."
extra {}
"     This is one of the cheapest saddles you have ever seen.
It is shoddily built, and looks as if it has been through a lot
of wear and tear."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
weight 20
cost 10 SILVER_PIECE
end

				saddle2
names {"leather saddle", "saddle"}
title "a large leather saddle"
descr "A large leather saddle rests on the ground here."
extra {}
"     This saddle was probably made by the craftsmen of Urland.
Long have horses been tied to their lives, and they have perfected
the crafting of riding equipment."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
weight 17
cost 2 GOLD_PIECE
end

				saddle3
names {"steel saddle", "saddle"}
title "an enormous saddle"
descr "An ernomous saddle is propped against the wall."
extra {}
"    This saddle was obviously crafted for the mightiest of
warhorses.  It is constructed of leather and steel to provide
the maximum of support on the riders mount.  You would be proud
to place this work upon your steed."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
weight 15
cost 3 GOLD_PIECE
end

				saddle4
names {"mithril saddle", "saddle"}
title "a strong saddle"
descr "An strong saddle lies on the ground."
extra {}
"    This saddle was obviously crafted for the mightiest of
warhorses.  It is constructed of leather and mithril
to provide support for a rider with a lance.  When equipped with
this massive weapon, a rider will surely do some gruesome damage."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
weight 12
cost 6 GOLD_PIECE
/*
dilbegin lance();
var
   target : unitptr;
   random : integer;
code
{
   :init:
   on_activation(self.outside.position != POSITION_FIGHTING, skip);

   :start:
   wait(SFB_COM,(activator.type == UNIT_ST_PC)and(self.equip == WEAR_ABOUT));

   target := self.outside.fighting;

   random := rnd(1, 50);

   if (random < 25);
      target.hp := target..hp - 50;

      act("Your $2N Strikes $3n!",
      A_ALWAYS,self.outside,self,target,TO_CHAR);
      act("$1n's $2N strikes $3n!",
      A_ALWAYS,self.outside,self,target,TO_NOTVICT);
      act("$1n's $2N strikes you!",
      A_ALWAYS,self.outside,self,null,TO_VICT);
   }
}
dilend
*/
end

				oats

names {"oats"}
title "Some horses oats"
descr "A small bag containing oats which a horse might eat sits here."
extra {}
"     These oats look very nutritious, but not like something you'd want
to eat.  Perhaps you could get your horse to try them."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(2,0)
weight 1
cost 3 COPPER_PIECE

dilbegin oats();
var
  pc : unitptr;

code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING) or
	       (self.position == POSITION_FIGHTING), skip);

  :start:
  wait(SFB_CMD, (command("eat") and ("oats" in
      argument)) and (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
    {
     pause;
     act("You puke violently after eating the oats.",
	 A_SOMEONE, pc, null, self, TO_CHAR);
     pause;
     act("$1n pukes violently after eating the oats.",
	 A_SOMEONE, pc, null, null, TO_REST);
    pc.hp := pc.hp - 20;
    position_update(pc);
    }
    unsecure(pc);

    :lostpc:
      goto start;

}
dilend
end

				horse_water
names {"horse water", "water"}
title "Some water for a horse"
descr "A small watering bag sits on the ground."
extra {}
"     This bag contains water for a horse."
manipulate {MANIPULATE_TAKE}
weight 2
LIQ_DEF(LIQ_WATER,5,5,5,0)
cost 2 COPPER_PIECE
dilbegin water();
var
  pc : unitptr;

code
{

  :init:
  heartbeat := PULSE_SEC*5;
  on_activation((self.position <= POSITION_SLEEPING) or
	       (self.position == POSITION_FIGHTING), skip);

  :start:
  wait(SFB_CMD, (command("drink") and ("horse water" in
      argument)) and (activator.type == UNIT_ST_PC));
    pc := activator;
    secure(pc, lostpc);
    {
     pause;
     act("You puke violently after drinking the water.",
	 A_SOMEONE, pc, null, self, TO_CHAR);
     pause;
     act("$1n pukes violently after drinking the water.",
	 A_SOMEONE, pc, null, null, TO_REST);
    pc.hp := pc.hp - 20;
    position_update(pc);
    }
    unsecure(pc);

    :lostpc:
      goto start;

}
dilend
end


				saddle_bags

names {"bags"}
title "a pair of Saddle bags"
descr "A pair of Saddle bags sit in the dust."
extra {}
"These saddle bags look as if they would be extremely useful
for holding items while riding upon a horse.  There is a
small tag which reads: instructions."
extra {"instructions"}
"They say:  put saddle bags on horse, get saddle bags from horse."

capacity 300
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_WAIST, MANIPULATE_ENTER}
weight 5
end

dung
names {"dung", "shit"}
title "a pile of s**t"
descr "A big pile of horse s**t is here...Yuck!"
type ITEM_KEY
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
weight 1
extra {} "It's crap ...what do you think it looks like?"
end

book_knowledge
names {"book of knowledge", "book"}
title "Screetons book of Knowledge"
descr "A very big book lays here."
type ITEM_NOTE
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
weight 5
extra {}
"  You think....therefore you are *you think*   "
rent 25 IRON_PIECE
end

cross_pendant
names {"cross-shaped pendant", "cross", "pendant"}
title "a Cross-shaped Pendant"
descr "A Cross-shaped pendant lays here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_NECK}
weight 2
rent 25 IRON_PIECE
end

divine_staff
names {"staff of divinity", "staff"}
title "a Staff of Divinity"
descr "A simple looking staff lays here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_QUARTERSTAFF, 3,2)
DIV_TRANSFER(2)
CHAR_FLAG_TRANSFER(CHAR_DETECT_ALIGN)
CHAR_FLAG_TRANSFER(CHAR_DETECT_MAGIC)
weight 15
rent 168 IRON_PIECE
end

%reset
load horse_seller into stable1@cypress max 3
load horse_seller into stable2@midgaard max 3
load horse_seller into stable3 max 3
load tackman into tack_shop@cypress max 3
{
   load bridle@urland
   load saddle1@urland
   load saddle2@urland
   load saddle3@urland
   load saddle4@urland
   load lead@urland
   load cheat_sheet@urland
   load saddle_bags@urland
}
load tackman into tack_shop2@midgaard max 3
{
   load bridle@urland
   load saddle1@urland
   load saddle2@urland
   load saddle3@urland
   load saddle4@urland
   load lead@urland
   load cheat_sheet@urland
   load saddle_bags@urland
}
load tackman into tack_shop3 max 3
{
   load bridle@urland
   load saddle1@urland
   load saddle2@urland
   load saddle3@urland
   load saddle4@urland
   load saddle_bags@urland
   load lead@urland
   load cheat_sheet@urland
}
load girl into stall1@cypress max 3
load girl into stall2@midgaard max 3
load girl into hall1 max 3
load dung into s1 zonemax 12
load dung into s2 zonemax 12
load dung into s3 zonemax 12
load dung into s4 zonemax 12
load dung into s5 zonemax 12
load dung into s6 zonemax 12
load dung into s7 zonemax 12
load dung into s8 zonemax 12
load dung into pas3 zonemax 12
load dung into vil_path29 zonemax 12
load dung into vil_path3 zonemax 12
load dung into vil_path31 zonemax 12
load receptionist into inn2 max 1
load chef into inn3 max 1
load innkeeper into inn max 1
load barkeep into tav2 max 1
{
   equip ham0@midgaard position WEAR_WIELD
}
load alchemist into in_alch max 1
{
  equip lsword0@midgaard position WEAR_WIELD
}
load necromancer into in_nec max 1
{
  equip lsword0@midgaard position WEAR_WIELD
}
load friar into in_ch max 1
{
  equip cross_pendant position WEAR_NECK_1
  equip sword2@midgaard position WEAR_WIELD
}
load vil_black into smithy@cypress max 2
{
  ARMOUR_S8
  equip ham0@midgaard position WEAR_WIELD
}
load vil_black into in_bl max 2
{
  ARMOUR_S8
  equip ham0@midgaard position WEAR_WIELD
}
load screeton into sc_house max 1
{
  load book_knowledge max 10
}
load stall_key into hall4 zonemax 1
load vil_horse into s2 zonemax 6
load vil_horse into s5 zonemax 6
load vil_horse into s3 zonemax 6
load vil_horse into s8 zonemax 6
load vil_horse into hall3 zonemax 6
load vil_horse into vil_path7 zonemax 6
load vil_horse2 into pas2 zonemax 2
load vil_horse2 into pas4 zonemax 2
load marr into vil_path33 zonemax 1
load stanley into vil_path3 zonemax 1
load comm1 into pas5 zonemax 1
load comm2 into vil_path1 zonemax 1
load comm3 into vil_path3 zonemax 1
load comm4 into vil_path4 zonemax 1
load comm5 into vil_path7 zonemax 1
load comm6 into square4 zonemax 1
door tem_ent NORTH {EX_CLOSED, EX_OPEN_CLOSE}
door sc_house SOUTH {EX_CLOSED, EX_OPEN_CLOSE}
door hall1 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall1 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall2 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall2 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall3 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall3 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall4 WEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door hall4 EAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door s1 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door s2 WEST {EX_OPEN_CLOSE, EX_CLOSED}
door s3 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door s4 WEST {EX_OPEN_CLOSE, EX_CLOSED}
door s5 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door s6 WEST {EX_OPEN_CLOSE, EX_CLOSED}
door s7 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door s8 WEST {EX_OPEN_CLOSE, EX_CLOSED}
%end




